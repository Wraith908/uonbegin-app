[{"C:\\Users\\Teresa\\Documents\\GitHub\\uonbegin-app\\src\\index.tsx":"1","C:\\Users\\Teresa\\Documents\\GitHub\\uonbegin-app\\src\\reportWebVitals.ts":"2","C:\\Users\\Teresa\\Documents\\GitHub\\uonbegin-app\\src\\App.tsx":"3","C:\\Users\\Teresa\\Documents\\GitHub\\uonbegin-app\\src\\pages\\LandingPage.tsx":"4","C:\\Users\\Teresa\\Documents\\GitHub\\uonbegin-app\\src\\components\\Body.tsx":"5","C:\\Users\\Teresa\\Documents\\GitHub\\uonbegin-app\\src\\models\\user.ts":"6","C:\\Users\\Teresa\\Documents\\GitHub\\uonbegin-app\\src\\components\\Login.tsx":"7","C:\\Users\\Teresa\\Documents\\GitHub\\uonbegin-app\\src\\components\\StaffDirectory.tsx":"8","C:\\Users\\Teresa\\Documents\\GitHub\\uonbegin-app\\src\\components\\InfoContainer.tsx":"9","C:\\Users\\Teresa\\Documents\\GitHub\\uonbegin-app\\src\\components\\NoMatch.tsx":"10","C:\\Users\\Teresa\\Documents\\GitHub\\uonbegin-app\\src\\models\\information.ts":"11","C:\\Users\\Teresa\\Documents\\GitHub\\uonbegin-app\\src\\models\\staff.ts":"12","C:\\Users\\Teresa\\Documents\\GitHub\\uonbegin-app\\src\\components\\editing-components\\ImageUploadBlock.tsx":"13","C:\\Users\\Teresa\\Documents\\GitHub\\uonbegin-app\\src\\components\\webbot\\chat-bot.js":"14","C:\\Users\\Teresa\\Documents\\GitHub\\uonbegin-app\\src\\components\\webbot\\search.js":"15"},{"size":618,"mtime":1636259339915,"results":"16","hashOfConfig":"17"},{"size":440,"mtime":1635115730507,"results":"18","hashOfConfig":"17"},{"size":243,"mtime":1635115730481,"results":"19","hashOfConfig":"17"},{"size":714,"mtime":1636520603885,"results":"20","hashOfConfig":"17"},{"size":2889,"mtime":1636690023491,"results":"21","hashOfConfig":"17"},{"size":228,"mtime":1636259339923,"results":"22","hashOfConfig":"17"},{"size":1510,"mtime":1636618647159,"results":"23","hashOfConfig":"17"},{"size":12271,"mtime":1636694759187,"results":"24","hashOfConfig":"17"},{"size":5731,"mtime":1636687076124,"results":"25","hashOfConfig":"17"},{"size":284,"mtime":1635115730486,"results":"26","hashOfConfig":"17"},{"size":173,"mtime":1636420400768,"results":"27","hashOfConfig":"17"},{"size":367,"mtime":1636687076138,"results":"28","hashOfConfig":"17"},{"size":795,"mtime":1636687076131,"results":"29","hashOfConfig":"17"},{"size":9675,"mtime":1636690023496,"results":"30","hashOfConfig":"17"},{"size":6281,"mtime":1636690023509,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"1tswe5",{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"34"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67"},"C:\\Users\\Teresa\\Documents\\GitHub\\uonbegin-app\\src\\index.tsx",[],["68","69"],"C:\\Users\\Teresa\\Documents\\GitHub\\uonbegin-app\\src\\reportWebVitals.ts",[],"C:\\Users\\Teresa\\Documents\\GitHub\\uonbegin-app\\src\\App.tsx",[],"C:\\Users\\Teresa\\Documents\\GitHub\\uonbegin-app\\src\\pages\\LandingPage.tsx",[],"C:\\Users\\Teresa\\Documents\\GitHub\\uonbegin-app\\src\\components\\Body.tsx",["70"],"import React, {useState} from 'react';\r\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport StaffDirectory from './StaffDirectory';\r\nimport InfoContainer from './InfoContainer';\r\nimport Login from './Login';\r\nimport Chatbot from './webbot/chat-bot';\r\nimport NoMatch from './NoMatch';\r\nimport { User } from '../models/user';\r\n\r\nconst Body = () => {\r\n  const [user, setUser] = useState(new User());\r\n\r\n  const logout = () => {\r\n    axios.post('logout').then(response => response);\r\n    setUser(new User());\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Router>\r\n        <header className = \"navbar\">\r\n          <nav>\r\n            <img src = \"logo.png\" className = \"logo\" />\r\n            <Link to = \"/\" className = \"nav-link1\">University Services</Link>\r\n            <Link to = \"/directory\" className = \"nav-link2\">Staff Directory</Link>\r\n            <Link to = \"/week-one-survival-pack\" className = \"nav-link3\">Week 1 Survival Pack</Link>\r\n            <Link to = \"/university-expectations\" className = \"nav-link4\">What to expect at University</Link>\r\n            <Link to = \"/faqs-and-testimonials\" className = \"nav-link5\">FAQs and Testimonials</Link>\r\n            <Link to = \"/chatbot\" className = \"nav-link6\">Chatbot</Link>\r\n            {user.id === 0 ?\r\n              <Link to = \"/login\" className = \"login-link\">Login</Link> :\r\n              <Link to = \"/\" onClick = {logout} className = \"login-link\">Logout</Link>\r\n            }\r\n          </nav>\r\n        </header>\r\n        <Switch>\r\n            <Route exact path = \"/\">\r\n              <InfoContainer title = \"University Services\" section_id = {1} user = {user} />\r\n              <InfoContainer title = \"Important Places\" section_id = {5} user = {user} />\r\n            </Route>\r\n            <Route path = \"/directory\">\r\n              <StaffDirectory user = {user} />\r\n            </Route>\r\n            <Route path = \"/week-one-survival-pack\">\r\n              <InfoContainer title = \"Week One Survival Pack\" section_id = {2} user = {user} />\r\n            </Route>\r\n            <Route path = \"/university-expectations\">\r\n              <InfoContainer title = \"University Expectations\" section_id = {3} user = {user} />\r\n            </Route>\r\n            <Route path = \"/faqs-and-testimonials\">\r\n              <InfoContainer title = \"Frequently Asked Questions\" section_id = {4} user = {user} />\r\n              <InfoContainer title = \"Student Testimonials\" section_id = {6} user = {user} />\r\n            </Route>\r\n            <Route path = \"/login\">\r\n              <Login user = {user} setUser = {setUser}/>\r\n            </Route>\r\n            <Route path = \"/chatbot\">\r\n              <Chatbot />\r\n            </Route>\r\n            <Route path = \"*\">\r\n              <NoMatch />\r\n            </Route>\r\n          </Switch>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Body;\r\n","C:\\Users\\Teresa\\Documents\\GitHub\\uonbegin-app\\src\\models\\user.ts",[],"C:\\Users\\Teresa\\Documents\\GitHub\\uonbegin-app\\src\\components\\Login.tsx",[],"C:\\Users\\Teresa\\Documents\\GitHub\\uonbegin-app\\src\\components\\StaffDirectory.tsx",["71","72","73","74","75","76"],"import React, { SyntheticEvent, useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport ImageUploadBlock from './editing-components/ImageUploadBlock';\r\nimport { Staff } from '../models/staff';\r\nimport { User } from '../models/user';\r\n\r\nconst StaffDirectory = (props: {user: User}) => {\r\n  /*DB information*/\r\n  const [staffList,setStaffList] = useState([]);\r\n  /*the focus of the page*/\r\n  const [chosenStaff, setChosenStaff] = useState(new Staff());\r\n  /*State booleans*/\r\n  const [isEditing, setIsEditing] = useState(false);\r\n  const [newStaff, setNewStaff] = useState(false);\r\n  const [optionSelected, setOptionSelected] = useState(0);\r\n  /*Pagination methods*/\r\n  const [page, setPage] = useState(1);\r\n  const [lastPage, setLastPage] = useState(0);\r\n  /*Edit/Create variables*/\r\n  const [cName, setCName] = useState('');\r\n  const [cAbout, setCAbout] = useState('');\r\n  const [cContactEmail, setCContactEmail] = useState('');\r\n  const [cContactPhone, setCContactPhone] = useState('');\r\n  const [cContactMobile, setCContactMobile] = useState('');\r\n  const [cContactFax, setCContactFax] = useState('');\r\n  const [cFocusArea, setCFocusArea] = useState('');\r\n  const [cOfficeRoom, setCOfficeRoom] = useState('');\r\n  const [cOfficeBuilding, setCOfficeBuilding] = useState('');\r\n  const [cOfficeLocation, setCOfficeLocation] = useState('');\r\n  const [eName, setEName] = useState('');\r\n  const [eAbout, setEAbout] = useState('');\r\n  const [eContactEmail, setEContactEmail] = useState('');\r\n  const [eContactPhone, setEContactPhone] = useState('');\r\n  const [eContactMobile, setEContactMobile] = useState('');\r\n  const [eContactFax, setEContactFax] = useState('');\r\n  const [eFocusArea, setEFocusArea] = useState('');\r\n  const [eOfficeRoom, setEOfficeRoom] = useState('');\r\n  const [eOfficeBuilding, setEOfficeBuilding] = useState('');\r\n  const [eOfficeLocation, setEOfficeLocation] = useState('');\r\n  /*searchbar*/\r\n  const [search, setSearch] = useState('');\r\n\r\n  useEffect(() => {\r\n    (\r\n      async () => {\r\n        try {\r\n          const {data} = await axios.get(`staff`);\r\n          setStaffList(data.data);\r\n          setLastPage(data.meta.last_page);\r\n        } catch (error) {\r\n          console.log(error);\r\n        }\r\n      }\r\n    )()\r\n  },[page]);\r\n\r\n  const next = () => {\r\n    if (page < lastPage) {\r\n      setPage(page + 1);\r\n    }\r\n  }\r\n\r\n  const prev = () => {\r\n    if (page > 0) {\r\n      setPage(page - 1);\r\n    }\r\n  }\r\n\r\n  const submitCreate = async (e: SyntheticEvent) => {\r\n    e.preventDefault();\r\n    try {\r\n      const {data} = await axios.post('staff',{\r\n        name: cName,\r\n        about: cAbout,\r\n        contact_email: cContactEmail,\r\n        contact_phone: cContactPhone,\r\n        contact_mobile: cContactMobile,\r\n        contact_fax: cContactFax,\r\n        focus_area: cFocusArea,\r\n        office_room: cOfficeRoom,\r\n        office_building: cOfficeBuilding,\r\n        office_location: cOfficeLocation\r\n      });\r\n      setCName('');\r\n      setCAbout('');\r\n      setCContactEmail('');\r\n      setCContactPhone('');\r\n      setCContactMobile('');\r\n      setCContactFax('');\r\n      setCFocusArea('');\r\n      setCOfficeRoom('');\r\n      setCOfficeBuilding('');\r\n      setCOfficeLocation('');\r\n      setNewStaff(false);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n    try {\r\n      //All of the information\r\n      const {data} = await axios.get('staff');\r\n      setStaffList(data.data);\r\n      setLastPage(data.meta.last_page);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  const submitEdit = async (e: SyntheticEvent) => {\r\n    e.preventDefault();\r\n    try {\r\n      const {data} = await axios.put(`staff/${chosenStaff.id}`,{\r\n        name: eName,\r\n        about: eAbout,\r\n        contact_email: eContactEmail,\r\n        contact_phone: eContactPhone,\r\n        contact_mobile: eContactMobile,\r\n        contact_fax: eContactFax,\r\n        focus_area: eFocusArea,\r\n        office_room: eOfficeRoom,\r\n        office_building: eOfficeBuilding,\r\n        office_location: eOfficeLocation\r\n      });\r\n      setIsEditing(false);\r\n\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n    try {\r\n      //All of the information\r\n      const {data} = await axios.get('staff');\r\n      setStaffList(data.data);\r\n      setLastPage(data.meta.last_page);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  const del = async (id: number) => {\r\n    if (window.confirm('Are you sure you want to delete')) {\r\n      axios.delete(`staff/${id}`);\r\n\r\n      setStaffList(staffList.filter((staff: Staff) => staff.id !== id));\r\n    }\r\n  }\r\n\r\n  const commenceSearch = async () => {\r\n    try {\r\n      const {data} = await axios.get(`staff/search?page=${page}&search=${search}`);\r\n      setStaffList(data.data);\r\n      setLastPage(data.meta.last_page);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  const CreateFormButton = () => {\r\n    if (newStaff) {return(<button onClick = {() => setNewStaff(false)}>Close Form</button>);}\r\n    return(<button onClick = {() => setNewStaff(true)}>Create</button>);\r\n  }\r\n\r\n  const setEdit = (staff: Staff) => {\r\n    setEName(staff.name);\r\n    setEAbout(staff.about);\r\n    setEContactEmail(staff.contact_email);\r\n    setEContactPhone(staff.contact_phone);\r\n    setEContactMobile(staff.contact_mobile);\r\n    setEContactFax(staff.contact_fax);\r\n    setEFocusArea(staff.focus_area);\r\n    setEOfficeRoom(staff.office_room);\r\n    setEOfficeBuilding(staff.office_building);\r\n    setEOfficeLocation(staff.office_location);\r\n    setChosenStaff(staff);\r\n\r\n  }\r\n\r\n  return(\r\n    <div id=\"staffDirectory\">\r\n      <div>\r\n        {/*Title section*/}\r\n        <h1>Staff Directory</h1><br />\r\n        <input type = \"text\" placeholder = \"Enter a name here to narrow your search...\" onChange = {(e) => setSearch(e.target.value)} className = \"searchbar\"/><br />\r\n        <button onClick = {commenceSearch}>Search</button>\r\n      </div>\r\n      <div>\r\n        {/*adding new sections to the database*/}\r\n        {props.user.id !== 0 && <CreateFormButton />}\r\n        {newStaff &&\r\n          <div id=\"staffCreate\">\r\n            <form onSubmit = {submitCreate}><br />\r\n            <label>Staff Name</label><br />\r\n            <input type = \"text\" onChange = {e => setCName(e.target.value)} required /><br />\r\n            <label>About section</label><br />\r\n            <textarea onChange = {e => setCAbout(e.target.value)} required></textarea><br />\r\n            {/*Contact information section*/}\r\n            <label>Contact Information</label><br />\r\n            <label>Email</label><br />\r\n            <input type = \"text\" onChange = {e => setCContactEmail(e.target.value)} required /><br />\r\n            <label>Phone</label><br />\r\n            <input type = \"text\" onChange = {e => setCContactPhone(e.target.value)} required /><br />\r\n            <label>Mobile</label><br />\r\n            <input type = \"text\" onChange = {e => setCContactMobile(e.target.value)} required /><br />\r\n            <label>Fax</label><br />\r\n            <input type = \"text\" onChange = {e => setCContactFax(e.target.value)} required /><br />\r\n            <label>Focuse area and Office Location</label><br />\r\n            <label>Focus Area</label><br />\r\n            <input type = \"text\" onChange = {e => setCFocusArea(e.target.value)} required /><br />\r\n            <label>Office Room</label><br />\r\n            <input type = \"text\" onChange = {e => setCOfficeRoom(e.target.value)} required /><br />\r\n            <label>Office Building</label><br />\r\n            <input type = \"text\" onChange = {e => setCOfficeBuilding(e.target.value)} required /><br />\r\n            <label>Office Location</label><br />\r\n            <input type = \"text\" onChange = {e => setCOfficeLocation(e.target.value)} required /><br />\r\n            <button type = \"submit\">Submit</button>\r\n            </form>\r\n          </div>\r\n        }\r\n        {/*Search results section*/}\r\n        {staffList.map((staff: Staff) => {\r\n          if (staff.id === chosenStaff.id) {\r\n            if (isEditing) {\r\n              return(\r\n                <div>\r\n                  <button onClick = {() => setIsEditing(!isEditing)}>View</button><br />\r\n                  <form onSubmit = {submitEdit}><br />\r\n                  <label>Staff Name</label><br />\r\n                  <input type = \"text\" onChange = {e => setEName(e.target.value)} defaultValue = {staff.name} required /><br />\r\n                  <label>About {eName}</label><br />\r\n                  <textarea onChange = {e => setEAbout(e.target.value)} defaultValue = {staff.about} required></textarea><br />\r\n                  {/*Contact information section*/}\r\n                  <label>Contact Information</label><br />\r\n                  <label>Email</label><br />\r\n                  <input type = \"text\" onChange = {e => setEContactEmail(e.target.value)} defaultValue = {staff.contact_email} required /><br />\r\n                  <label>Phone</label><br />\r\n                  <input type = \"text\" onChange = {e => setEContactPhone(e.target.value)} defaultValue = {staff.contact_phone} required /><br />\r\n                  <label>Mobile</label><br />\r\n                  <input type = \"text\" onChange = {e => setEContactMobile(e.target.value)} defaultValue = {staff.contact_mobile} required /><br />\r\n                  <label>Fax</label><br />\r\n                  <input type = \"text\" onChange = {e => setEContactFax(e.target.value)} defaultValue = {staff.contact_fax} required /><br />\r\n                  <label>Focuse area and Office Location</label><br />\r\n                  <label>Focus Area</label><br />\r\n                  <input type = \"text\" onChange = {e => setEFocusArea(e.target.value)} defaultValue = {staff.focus_area} required /><br />\r\n                  <label>Office Room</label><br />\r\n                  <input type = \"text\" onChange = {e => setEOfficeRoom(e.target.value)} defaultValue = {staff.office_room} required /><br />\r\n                  <label>Office Building</label><br />\r\n                  <input type = \"text\" onChange = {e => setEOfficeBuilding(e.target.value)} defaultValue = {staff.office_building} required /><br />\r\n                  <label>Office Location</label><br />\r\n                  <input type = \"text\" onChange = {e => setEOfficeLocation(e.target.value)} defaultValue = {staff.office_location} required /><br />\r\n                  <button type = \"submit\">Submit</button><br />\r\n                  </form>\r\n                  <button onClick = {() => del(chosenStaff.id)}>Delete</button>\r\n                </div>\r\n              );\r\n            }\r\n            return(\r\n              <div id=\"staffDirectoryTile\">\r\n                <h3>{staff.name}</h3>{props.user.id !==0 && <button onClick = {() => setIsEditing(!isEditing)}>Edit</button>}\r\n                <hr />\r\n                <p>{chosenStaff.about}</p>\r\n                <label>Contact Information:</label><br />\r\n                <ul>\r\n                  <li>Contact Email: {staff.contact_email}</li>\r\n                  <li>Contact Phone: {staff.contact_phone}</li>\r\n                  <li>Contact Mobile: {staff.contact_mobile}</li>\r\n                  <li>Contact Fax: {staff.contact_fax}</li>\r\n                </ul>\r\n                <label>Focus Area and Office:</label><br />\r\n                <ul>\r\n                  <li>Focus Area: {staff.focus_area}</li>\r\n                  <li>Office Room: {staff.office_room}</li>\r\n                  <li>Office Building: {staff.office_building}</li>\r\n                  <li>Office Location: {staff.office_location}</li>\r\n                </ul>\r\n                {props.user.id !==0 && <button onClick = {() => del(chosenStaff.id)}>Delete</button>}<br />\r\n              </div>\r\n            );\r\n          } else {\r\n            return(\r\n              <a onClick = {() => setEdit(staff)}>\r\n                <div id=\"staffBrief\">\r\n                  <h3>{staff.name}</h3><br />\r\n                  <p>Contact email: {staff.contact_email}</p><br />\r\n                  <p>Office Room: {staff.office_room}</p>\r\n                </div>\r\n              </a>\r\n            );\r\n          }\r\n        })}<br />\r\n        <button onClick = {prev}>Prev</button>\r\n        <button onClick = {next}>Next</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default StaffDirectory;\r\n","C:\\Users\\Teresa\\Documents\\GitHub\\uonbegin-app\\src\\components\\InfoContainer.tsx",["77","78"],"import React, { SyntheticEvent, useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport '../App.css';\r\n/*component imports*/\r\nimport ImageUploadBlock from './editing-components/ImageUploadBlock';\r\n/*models*/\r\nimport { Information } from '../models/information';\r\nimport { User } from '../models/user';\r\n\r\nconst InfoContainer = (props: {title: string, section_id: number, user: User}) => {\r\n  /*DB information*/\r\n  const [information, setInformation] = useState([]);\r\n  /*State variables*/\r\n  const [editInfo, setEditInfo] = useState(new Information());\r\n  const [newInfo, setNewInfo] = useState(false);\r\n  /*Edit/Create variables*/\r\n  const [eId, setEID] = useState(0);\r\n  const [eTitle, setETitle] = useState('');\r\n  const [eBody, setEBody] = useState('');\r\n  const [ePictureURL, setEPictureURL] = useState('');\r\n  const [cTitle, setCTitle] = useState('');\r\n  const [cBody, setCBody] = useState('');\r\n  const [cPictureURL, setCPictureURL] = useState('');\r\n\r\n  useEffect(() => {\r\n    (\r\n      async () => {\r\n        try {\r\n          //All of the information\r\n          const {data} = await axios.get(`info/`);\r\n          setInformation(data);\r\n        } catch (error) {\r\n          console.log(error);\r\n        }\r\n      }\r\n    )()\r\n  },[]);\r\n\r\n  const swapNewInfo = () => {\r\n    //This is used to determine which state the creation form should be in\r\n    setNewInfo(!newInfo);\r\n  }\r\n\r\n  const del = async (id: number) => {\r\n    if (window.confirm('Are you sure you want to delete')) {\r\n      axios.delete(`info/${id}`);\r\n\r\n      setInformation(information.filter((info: Information) => info.id !== id));\r\n    }\r\n  }\r\n\r\n  const submitCreate = async (e: SyntheticEvent) => {\r\n    e.preventDefault();\r\n    try {\r\n      await axios.post('info', {\r\n          title: cTitle,\r\n          body: cBody,\r\n          section_id: props.section_id,\r\n          image_url:  cPictureURL\r\n      })\r\n      setCTitle('');\r\n      setCBody('');\r\n      setCPictureURL('');\r\n      setNewInfo(false);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n    try {\r\n      //All of the information\r\n      const {data} = await axios.get('info');\r\n      setInformation(data);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  const submitEdit = async (e: SyntheticEvent) => {\r\n    e.preventDefault();\r\n    setEID(editInfo.id);\r\n    try {\r\n      await axios.put(`info/${eId}`,{\r\n        title: eTitle,\r\n        body: eBody,\r\n        section_id: props.section_id,\r\n        image_url: ePictureURL\r\n      });\r\n      setEditInfo(new Information());\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n    try {\r\n      //All of the information\r\n      const {data} = await axios.get('info');\r\n      setInformation(data);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  return(\r\n    <div id=\"bannerSettings\">\r\n      <h1>{props.title}</h1>\r\n      {newInfo?\r\n        <button onClick = {swapNewInfo}>Close Form</button> :\r\n        props.user.id !== 0 && <button onClick = {swapNewInfo}>Create New Form</button>\r\n      }\r\n      {newInfo && props.user.id !== 0 &&\r\n        <div id = \"infoCreationForm\">\r\n          <form onSubmit = {submitCreate}>\r\n            <label>Head</label><br />\r\n            <input type = \"text\" onChange = {e => setCTitle(e.target.value)}\r\n            placeholder = \"Header\" required /><br />\r\n            <label>Body</label><br />\r\n            <textarea onChange = {e => setCBody(e.target.value)} required></textarea><br />\r\n            <label>Image</label><br />\r\n            {cPictureURL === ''?\r\n              <p>No picture</p>:\r\n              <div>\r\n                <p>{cPictureURL}</p><button onClick = {() => setCPictureURL('')}>Remove picture</button>\r\n              </div>\r\n            }\r\n            <ImageUploadBlock pictureURL = {cPictureURL} setPictureURL = {setCPictureURL}/>\r\n            <button type = \"submit\">Submit</button>\r\n          </form>\r\n        </div>\r\n       }\r\n      {information.map((info: Information) => {\r\n        if (info.section_id === props.section_id) {\r\n          if (info.id === editInfo.id) {\r\n            return(\r\n              <div id = \"infoCreationForm\">\r\n                <button onClick = {() => setEditInfo(new Information())}>Close Edit</button><br />\r\n                <form onSubmit = {submitEdit}>\r\n                  <label>Head</label><br />\r\n                  <input type = \"text\" name = \"title\" placeholder = \"Header\"\r\n                  onChange = {e => setETitle(e.target.value)} defaultValue = {info.title} required /><br />\r\n                  <label>Body</label><br />\r\n                  <textarea onChange = {e => setEBody(e.target.value)} defaultValue = {info.body} required></textarea><br />\r\n                  {ePictureURL === ''?\r\n                    <p>No picture</p>:\r\n                    <div>\r\n                      <p>{ePictureURL}</p><button onClick = {() => setEPictureURL('')}>Remove picture</button>\r\n                    </div>\r\n                  }\r\n                  <ImageUploadBlock pictureURL = {ePictureURL} setPictureURL = {setEPictureURL} />\r\n                  <button type = \"submit\">Submit</button>\r\n                </form>\r\n              </div>\r\n            );\r\n          }\r\n          return(\r\n            <div id=\"infoBlock\">\r\n              <h2>{info.title}</h2>\r\n              {props.user.id !== 0 && <button onClick = {() => setEditInfo(info)}>Edit</button>}\r\n              <p>{info.body}</p>\r\n              {info.image_url !== undefined && info.image_url !== null && <img src = {info.image_url} />}\r\n              {props.user.id !== 0 && <button onClick = {() => del(info.id)}>Delete</button>}\r\n            </div>\r\n          );\r\n        }\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default InfoContainer;\r\n","C:\\Users\\Teresa\\Documents\\GitHub\\uonbegin-app\\src\\components\\NoMatch.tsx",[],"C:\\Users\\Teresa\\Documents\\GitHub\\uonbegin-app\\src\\models\\information.ts",[],"C:\\Users\\Teresa\\Documents\\GitHub\\uonbegin-app\\src\\models\\staff.ts",[],"C:\\Users\\Teresa\\Documents\\GitHub\\uonbegin-app\\src\\components\\editing-components\\ImageUploadBlock.tsx",[],"C:\\Users\\Teresa\\Documents\\GitHub\\uonbegin-app\\src\\components\\webbot\\chat-bot.js",["79","80","81","82","83","84","85","86","87","88","89","90","91","92","93","94","95","96","97"],"import React, {Component} from 'react';\r\nimport \"./chatbot.css\"\r\nimport \"./search\"\r\nimport Example from './search';\r\n\r\n\r\nclass ChatBot extends Component{\r\n  constructor(props) {\r\n    super(props);\r\n     // Set initial state \r\n     this.state = {message : undefined, reply:\"\"} \r\n    \r\n// Binding this keyword \r\nthis.handleChange = this.handleChange.bind(this) \r\nthis.UserToBot = this.UserToBot.bind(this) \r\n    \r\n  }\r\n \r\n    \r\n  handleChange(event, { newValue }) {\r\n    //console.log(event.target.value)\r\n\r\n    this.setState({\r\n      message: newValue\r\n      \r\n    });\r\n    console.log(event.target)\r\n    console.log('1',newValue);\r\n  }\r\n  \r\n  handleChange2(val) {\r\n    console.log('2', val)\r\n    // if(val){\r\n    //   this.setState({\r\n    //     message:\"\"\r\n    //   });\r\n    // }\r\n    \r\n  \r\n  }\r\n  UserToBot() {\r\n    //console.log(this.state.message);\r\n    var div = document.createElement('div');\r\n    var b = document.createElement('b');\r\n    div.setAttribute(\"class\", \"usermessage\");\r\n    b.innerHTML =this.state.message;\r\n    var img = document.createElement('img');\r\n    img.src = 'images/user.png';\r\n    div.append(img);\r\n    div.append(b);\r\n\r\n    document.getElementById('message-area').append(div);\r\n\r\n    this.setState({\r\n      message:\"\"\r\n    });\r\n\r\n    var reply = document.createElement('div');\r\n    reply.setAttribute(\"class\", \"botmessage\");\r\n    reply.innerHTML =this.QA(this.state.message);\r\n    var img = document.createElement('img');\r\n    img.src = 'images/bot.png';\r\n    reply.append(img);\r\n    document.getElementById('message-area').append(reply);\r\n    \r\n\r\n    document.getElementById('message-area').scrollTo(0,document.getElementById('message-area').scrollHeight);\r\n  }\r\n\r\n  QA(question){\r\n\r\n    switch (question) {\r\n      case 'Hi':\r\n      case 'hi ':\r\n      case 'Hello':\r\n      case 'hello':\r\n      case 'Hey':\r\n      case 'hey':\r\n      case 'Hola':\r\n      case 'hola':\r\n      case 'i need help':\r\n      case 'I need help':\r\n      case 'some one':\r\n      case 'Some one':\r\n      return \"Hello there, i am an AI bot programmed to help student. How can i assist you.\";\r\n       break;\r\n      case 'Where can I find a map of the University for guiding myself from current location to my destination?':\r\n      case 'University room':  \r\n      case 'map':\r\n      case 'university map':\r\n      case 'location':\r\n      case 'guide':\r\n      case 'where':\r\n      return \"Maps of the University of Newcastle's Newcastle (Callaghan), Newcastle City precinct, Central Coast (Ourimbah) and Port Macquarie campuses can be found at Campus Maps. You can also use the Directions Tile on myUON as an additional source for campus maps.\";\r\n      break;\r\n      case 'How do I enrol in a course and register for class activities?':\r\n      case \"enrol\":  \r\n      case \"enrolment\":\r\n      case \"timetable\":\r\n      case \"register\":\r\n      case \"classes\":\r\n      return \"Enrolment is a two-part process: Step one - Enrol in your courses in myHub and plan your timetable. Step two - Choose times for your class activities in Manage myTimetable in myUON.\";\r\n      break;\r\n      case 'How can I check majors and elective courses?':\r\n      case \"major courses\":\r\n      case \"elective courses\":\r\n      case \"find major and elective courses\":\r\n      case 'course':\r\n      return \"Your Program Handbook will list the available majors for your degree and each course associated with those majors. Please remember to check the course handbooks for the desired major to find out its delivery locations and further specific information to the course.\";\r\n      break;\r\n      case 'How can I consult with my program advisor? how to contact them?':\r\n      case \"program advisor\":\r\n      case \"program convenor\":\r\n      case \"contact\":\r\n      case \"meeting\":\r\n      return \"You can arrange a face-to-face or online consultation with your program advisor by emailing them on ProgramAdvisor@uon.edu.au.\";\r\n      break;\r\n      case 'I lost my student card? How can I get new card?':\r\n      case \"lost card\":\r\n      case \"student card\":\r\n      case \"university card\":\r\n      case \"new card\":\r\n     \r\n      return \"Sorry to hear that. But you don’t need to worry. You can get new student card from student services centre by showing them e-card from your my uon app. \";\r\n      break;\r\n      case 'Where is the library?':\r\n      case \"library\":\r\n      case 'books':\r\n      return \"There are 2 libraries in university, which one you are looking for? Hunter library and auchmuty library. Here is the location map navigate to nearest library.\";\r\n      break;\r\n      case 'Is there any university doctor available for consulting my health?':\r\n      case \"doctor\":\r\n      case \"consultant\":\r\n      case \"hospital\":\r\n      case \"health\":\r\n      return \"University doctors are in student services centre near commonwealth bank. You can either book an appointment or can check for walk-in appointments. Please bring your student card at the time of consultation. \";\r\n      break;\r\n      case 'I cannot afford my university fees? Is there any scholarship or university help available?':\r\n      case \"fees\":\r\n      case \"scholarship\":\r\n      case \"hardship \":\r\n      return 'Yes there are plenty of scholarships available you can apply through university scholarship website.';\r\n      break;\r\n      case ' How do I apply for scholarships?':\r\n      case \"apply scholarship\":\r\n      return 'Information on all available scholarships offered by the University of Newcastle for enabling, undergraduate and postgraduate course work students can be found on the Scholarships website.';\r\n      break;\r\n      case 'How do I apply for an Opal Concession card and Transport Entitlement Card?':\r\n      case \"opal card\":\r\n      case \"concession card\":\r\n      case \"transport entitlement card\":\r\n      case \"how\":\r\n      // case \"apply\":\r\n      return 'Opal Concession cards are only available directly via OPAL and cannot be purchased or collected from a retail outlet. https://transportnsw.info/tickets-opal/opal';\r\n      break;\r\n      case 'What support services does the University offer for students?':\r\n      case \"support\":\r\n      case \"university services\":\r\n      return 'There is a wide range of student support services available to help students transition to university and get the most out of their study. Our support services can provide you with assistance in the areas like: Health and Wellbeing, Meeting the Costs of Study, Program Advice, Student Life on Campus, Tools for Success and Other Topics (student living, chaplaincy, counselling, disability support, careers service etc)';\r\n      break;\r\n      case 'My classes finish when it is dark, are there any extra safety precautions I can take when heading home?':\r\n      case \"security\":\r\n      case \"safety\":\r\n      return 'Our campuses and facilities are safe places to visit, study and work, however everyone should be vigilant, especially when on campus after dark. the Security Shuttle runs an after hours service, where from 6:30pm to midnight, the Security Shuttle will take passengers to locations on campus, and in surrounding suburbs.';\r\n      break;\r\n      case 'How to arrange security shuttle pickup?':\r\n      case \"how security\":\r\n      case \"shuttle\":\r\n      case \"pickup\":\r\n      case 'bus':\r\n      case 'train':\r\n      return 'To arrange a pick up, please call 4921 5888, then press 2. The Security shuttle is also available at Ourimbah from 5pm - 10pm. To arrange pick up, call 4921 5888, then press 3. ';\r\n      break;\r\n      case 'How do I find out what events are happening on campus?':\r\n      case \"event\":\r\n      case \"campus\":\r\n      case \"function\":\r\n      return 'Student Central puts on lots of fun events on campus, including movie screenings, bar activities and free live entertainment each Tuesday, Wednesday and Thursday at lunchtime. The free entertainment is usually staged in either the Derkenne Courtyard,  Auchmuty Courtyard or Bar on the Hill and NUspace.';\r\n      break;\r\n      case 'How do I apply to waive my student visa application fee due to COVID-19?':\r\n      case \"visa\":\r\n      case \"apply student visa\":\r\n      case \"covid19\":\r\n      case \"student visa\":\r\n      return 'The Department of Home Affairs (DHA) may consider waiving your visa application fee if you extend your student visa due to the impact of COVID-19. Please see criteria DHA have listed for consideration. If you meet the criteria, on application for your COE you can request the 1545 COVID-19 impacted student form. If you have already been issued your COE send an email to studentadvice@newcastle.edu.au.';\r\n      break;\r\n      case 'how to find university staff contact details':\r\n      case 'university staff':\r\n      case 'staff directory':\r\n      return 'you can check university staff directory on website by typing staff directory'\r\n      break;\r\n        \r\n      default:\r\n        return \"Sorry I couldn't understand. Please select from the given questions by typing x or X\";\r\n        break;\r\n    }\r\n\r\n  }\r\n \r\n  \r\n  render() {\r\n   \r\n    return (\r\n      \r\n     \r\n        <div className=\"chat-box\">\r\n       \r\n         <div className=\"message-area\" id=\"message-area\">\r\n\r\n           {/* <div className=\"usermessage\">Hi</div>\r\n           <div className=\"botmessage\">Hello</div> */}\r\n\r\n         </div>\r\n         \r\n         {/* <input className=\"chat-input\" value={this.state.message} onChange={this.handleChange}/> */}\r\n         <Example className=\"chat-input\" msg={this.state.message} func={this.handleChange} func2={this.handleChange2}></Example>\r\n         <button className=\"chat-button\" onClick={this.UserToBot}>Send</button>\r\n        \r\n  \r\n          \r\n        </div>\r\n     \r\n      \r\n    );\r\n  }\r\n}\r\n\r\nexport default ChatBot;\r\n","C:\\Users\\Teresa\\Documents\\GitHub\\uonbegin-app\\src\\components\\webbot\\search.js",["98","99"],"import React from 'react';\r\nimport Autosuggest from 'react-autosuggest';\r\nimport './label.css';\r\n\r\n// Imagine you have a list of languages that you'd like to autosuggest.\r\nconst languages = [\r\n  {\r\n    name: 'Hi'\r\n  },\r\n  {\r\n    name: 'Hello'\r\n  },\r\n  {\r\n    name: 'I need help'\r\n  },\r\n  {\r\n    name: 'Where can I find a map of the University for guiding myself from current location to my destination?'\r\n  },\r\n  {\r\n    name: 'How do I enrol in a course and register for class activities?'\r\n  },\r\n  {\r\n    name: 'How can I check majors and elective courses?'\r\n  },\r\n  {\r\n    name: 'How can I consult with my program advisor? how to contact them?'\r\n  },\r\n  {\r\n   name: 'I lost my student card? How can I get new card?' \r\n  },\r\n  {\r\n    name:'Where is the library?'\r\n  },\r\n  {\r\n    name:'Is there any university doctor available for consulting my health?'\r\n  },\r\n  {\r\n    name: 'I cannot afford my university fees? Is there any scholarship or university help available?'\r\n  },\r\n  {\r\n    name: ' How do I apply for scholarships?'\r\n  },\r\n  {\r\n    name: 'How do I apply for an Opal Concession card and Transport Entitlement Card?'\r\n  },\r\n  {\r\n    name: 'What support services does the University offer for students?'\r\n  },\r\n  {\r\n    name: 'My classes finish when it is dark, are there any extra safety precautions I can take when heading home?'\r\n  },\r\n  {\r\n    name: 'How to arrange security shuttle pickup? '\r\n  },\r\n  {\r\n    name: 'How do I find out what events are happening on campus?'\r\n  },\r\n  {\r\n    name: 'How do I apply to waive my student visa application fee due to COVID-19?'\r\n  },\r\n  {\r\n    name: 'University room'\r\n  },\r\n  {\r\n    name: 'map'\r\n  },\r\n  {\r\n    name: ' university map'\r\n  },\r\n  {\r\n    name: 'location'\r\n  },\r\n  {\r\n    name: 'guide'\r\n  },\r\n  {\r\n    name: 'enrol'\r\n  },\r\n  {\r\n    name: 'enrolment'\r\n  },\r\n  {\r\n    name: 'timetable'\r\n  },\r\n  {\r\n    name: 'course'\r\n  },\r\n  {\r\n    name: 'register'\r\n  },\r\n  {\r\n    name: 'classes'\r\n  },\r\n  {\r\n    name: 'major courses'\r\n  },\r\n  {\r\n    name: 'elective courses'\r\n  },\r\n  {\r\n    name: 'find major and elective courses'\r\n  },\r\n  {\r\n    name: 'program advisor'\r\n  },\r\n  {\r\n    name: 'program convenor'\r\n  },\r\n  {\r\n    name: 'contact'\r\n  },\r\n  {\r\n    name: 'meeting'\r\n  },\r\n  {\r\n    name: 'lost card'\r\n  },\r\n  {\r\n    name: 'contact'\r\n  },\r\n  {\r\n    name: ' university card'\r\n  },\r\n  {\r\n    name: 'new card'\r\n  },\r\n  {\r\n    name: 'student card'\r\n  },\r\n  {\r\n    name: 'library'\r\n  },\r\n  {\r\n    name: 'books'\r\n  },\r\n  {\r\n    name: 'doctor'\r\n  }\r\n  ,\r\n  {\r\n    name: 'consultant'\r\n  }\r\n  ,\r\n  {\r\n    name: 'hospital'\r\n  }\r\n  ,\r\n  {\r\n    name: 'health'\r\n  },\r\n  {\r\n    name: 'fees'\r\n  },\r\n  {\r\n    name: 'scholarship'\r\n  },\r\n  {\r\n    name: 'hardship'\r\n  },\r\n  {\r\n    name: 'apply scholarship'\r\n  },\r\n  {\r\n    name: 'opal card'\r\n  },\r\n  {\r\n    name: 'concession card'\r\n  },\r\n  {\r\n    name: 'transport entitlement card'\r\n  },\r\n  {\r\n    name: 'how'\r\n  },\r\n  {\r\n    name: 'support'\r\n  },\r\n  {\r\n    name: 'university services'\r\n  },\r\n  {\r\n    name: 'security'\r\n  },\r\n  {\r\n    name: 'safety'\r\n  },\r\n  {\r\n    name: 'how security'\r\n  },\r\n  {\r\n    name: 'shuttle'\r\n  },\r\n  {\r\n    name: 'pickup'\r\n  },\r\n  {\r\n    name: 'bus'\r\n  },\r\n  {\r\n    name: 'train'\r\n  },\r\n  {\r\n    name: 'event'\r\n  },\r\n  {\r\n    name: 'campus'\r\n  },\r\n  {\r\n    name: 'function'\r\n  },\r\n  {\r\n    name: 'visa'\r\n  },\r\n  {\r\n    name: 'apply student visa'\r\n  },\r\n  {\r\n    name: 'covid19'\r\n  },\r\n  {\r\n    name: 'student visa'\r\n  },\r\n  {\r\n    name: 'staff directory'\r\n  },\r\n  {\r\n    name: 'university staff'\r\n  },\r\n\r\n\r\n];\r\n\r\n// Teach Autosuggest how to calculate suggestions for any given input value.\r\nconst getSuggestions = value => {\r\n  const inputValue = value.trim().toLowerCase();\r\n  const inputLength = inputValue.length;\r\n  if(inputValue == 'x' || inputValue =='X'){\r\n    return languages;\r\n  }\r\n  return inputLength === 0 ? [] : languages.filter(lang =>\r\n    lang.name.toLowerCase().slice(0, inputLength) === inputValue\r\n  );\r\n};\r\n\r\n// When suggestion is clicked, Autosuggest needs to populate the input\r\n// based on the clicked suggestion. Teach Autosuggest how to calculate the\r\n// input value for every given suggestion.\r\n\r\n\r\n// Use your imagination to render suggestions.\r\n\r\n\r\nclass Example extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n\r\n    // Autosuggest is a controlled component.\r\n    // This means that you need to provide an input value\r\n    // and an onChange handler that updates this value (see below).\r\n    // Suggestions also need to be provided to the Autosuggest,\r\n    // and they are initially empty because the Autosuggest is closed.\r\n    this.state = {\r\n      value: '',\r\n      suggestions: []\r\n    };\r\n  }\r\n  renderSuggestion = suggestion => (\r\n    <div >\r\n      {suggestion.name}\r\n    </div>\r\n    \r\n  );\r\n   getSuggestionValue = suggestion => suggestion.name;\r\n  onChange  = (event, { newValue }) => {\r\n    this.setState({\r\n      value: newValue,\r\n      \r\n    });\r\n    this.props.func(event, { newValue });\r\n    // if(newValue != undefined){\r\n    //     this.props.func2(newValue);\r\n    // }\r\n    \r\n  };\r\n\r\n \r\n\r\n  // Autosuggest will call this function every time you need to update suggestions.\r\n  // You already implemented this logic above, so just use it.\r\n  onSuggestionsFetchRequested = ({ value }) => {\r\n    this.setState({\r\n      suggestions: getSuggestions(value)\r\n    });\r\n  };\r\n\r\n  // Autosuggest will call this function every time you need to clear suggestions.\r\n  onSuggestionsClearRequested = () => {\r\n    this.setState({\r\n      suggestions: []\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { value, suggestions } = this.state;\r\n\r\n    // Autosuggest will pass through all these props to the input.\r\n    const inputProps = {\r\n      placeholder: 'Type a message, suggestion will appear accrodingly',\r\n      value,\r\n      onChange: this.onChange,\r\n      \r\n    };\r\n\r\n    // Finally, render it!\r\n    return (\r\n      \r\n      <Autosuggest\r\n     \r\n        suggestions={suggestions}\r\n        onSuggestionsFetchRequested={this.onSuggestionsFetchRequested}\r\n        onSuggestionsClearRequested={this.onSuggestionsClearRequested}\r\n        getSuggestionValue={this.getSuggestionValue}\r\n        renderSuggestion={this.renderSuggestion}\r\n        inputProps={inputProps}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default Example;",{"ruleId":"100","replacedBy":"101"},{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","severity":1,"message":"105","line":24,"column":13,"nodeType":"106","endLine":24,"endColumn":56},{"ruleId":"107","severity":1,"message":"108","line":3,"column":8,"nodeType":"109","messageId":"110","endLine":3,"endColumn":24},{"ruleId":"107","severity":1,"message":"111","line":15,"column":10,"nodeType":"109","messageId":"110","endLine":15,"endColumn":24},{"ruleId":"107","severity":1,"message":"112","line":15,"column":26,"nodeType":"109","messageId":"110","endLine":15,"endColumn":43},{"ruleId":"107","severity":1,"message":"113","line":72,"column":14,"nodeType":"109","messageId":"110","endLine":72,"endColumn":18},{"ruleId":"107","severity":1,"message":"113","line":111,"column":14,"nodeType":"109","messageId":"110","endLine":111,"endColumn":18},{"ruleId":"114","severity":1,"message":"115","line":278,"column":15,"nodeType":"106","endLine":278,"endColumn":51},{"ruleId":"116","severity":1,"message":"117","line":127,"column":44,"nodeType":"118","messageId":"119","endLine":127,"endColumn":46},{"ruleId":"104","severity":1,"message":"105","line":156,"column":75,"nodeType":"106","endLine":156,"endColumn":105},{"ruleId":"120","severity":1,"message":"121","line":61,"column":9,"nodeType":"109","messageId":"122","endLine":61,"endColumn":12},{"ruleId":"123","severity":1,"message":"124","line":86,"column":8,"nodeType":"125","messageId":"126","endLine":86,"endColumn":14},{"ruleId":"123","severity":1,"message":"124","line":95,"column":7,"nodeType":"125","messageId":"126","endLine":95,"endColumn":13},{"ruleId":"123","severity":1,"message":"124","line":103,"column":7,"nodeType":"125","messageId":"126","endLine":103,"endColumn":13},{"ruleId":"123","severity":1,"message":"124","line":110,"column":7,"nodeType":"125","messageId":"126","endLine":110,"endColumn":13},{"ruleId":"123","severity":1,"message":"124","line":117,"column":7,"nodeType":"125","messageId":"126","endLine":117,"endColumn":13},{"ruleId":"123","severity":1,"message":"124","line":125,"column":7,"nodeType":"125","messageId":"126","endLine":125,"endColumn":13},{"ruleId":"123","severity":1,"message":"124","line":130,"column":7,"nodeType":"125","messageId":"126","endLine":130,"endColumn":13},{"ruleId":"123","severity":1,"message":"124","line":137,"column":7,"nodeType":"125","messageId":"126","endLine":137,"endColumn":13},{"ruleId":"123","severity":1,"message":"124","line":143,"column":7,"nodeType":"125","messageId":"126","endLine":143,"endColumn":13},{"ruleId":"123","severity":1,"message":"124","line":147,"column":7,"nodeType":"125","messageId":"126","endLine":147,"endColumn":13},{"ruleId":"123","severity":1,"message":"124","line":155,"column":7,"nodeType":"125","messageId":"126","endLine":155,"endColumn":13},{"ruleId":"123","severity":1,"message":"124","line":160,"column":7,"nodeType":"125","messageId":"126","endLine":160,"endColumn":13},{"ruleId":"123","severity":1,"message":"124","line":165,"column":7,"nodeType":"125","messageId":"126","endLine":165,"endColumn":13},{"ruleId":"123","severity":1,"message":"124","line":173,"column":7,"nodeType":"125","messageId":"126","endLine":173,"endColumn":13},{"ruleId":"123","severity":1,"message":"124","line":179,"column":7,"nodeType":"125","messageId":"126","endLine":179,"endColumn":13},{"ruleId":"123","severity":1,"message":"124","line":186,"column":7,"nodeType":"125","messageId":"126","endLine":186,"endColumn":13},{"ruleId":"123","severity":1,"message":"124","line":191,"column":7,"nodeType":"125","messageId":"126","endLine":191,"endColumn":13},{"ruleId":"123","severity":1,"message":"124","line":195,"column":9,"nodeType":"125","messageId":"126","endLine":195,"endColumn":15},{"ruleId":"127","severity":1,"message":"128","line":237,"column":17,"nodeType":"129","messageId":"130","endLine":237,"endColumn":19},{"ruleId":"127","severity":1,"message":"128","line":237,"column":38,"nodeType":"129","messageId":"130","endLine":237,"endColumn":40},"no-native-reassign",["131"],"no-negated-in-lhs",["132"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","@typescript-eslint/no-unused-vars","'ImageUploadBlock' is defined but never used.","Identifier","unusedVar","'optionSelected' is assigned a value but never used.","'setOptionSelected' is assigned a value but never used.","'data' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","no-redeclare","'img' is already defined.","redeclared","no-unreachable","Unreachable code.","BreakStatement","unreachableCode","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]