[{"C:\\Users\\Teresa\\Documents\\GitHub\\uonbegin-app\\src\\index.tsx":"1","C:\\Users\\Teresa\\Documents\\GitHub\\uonbegin-app\\src\\reportWebVitals.ts":"2","C:\\Users\\Teresa\\Documents\\GitHub\\uonbegin-app\\src\\App.tsx":"3","C:\\Users\\Teresa\\Documents\\GitHub\\uonbegin-app\\src\\pages\\LandingPage.tsx":"4","C:\\Users\\Teresa\\Documents\\GitHub\\uonbegin-app\\src\\components\\Body.tsx":"5","C:\\Users\\Teresa\\Documents\\GitHub\\uonbegin-app\\src\\models\\user.ts":"6","C:\\Users\\Teresa\\Documents\\GitHub\\uonbegin-app\\src\\components\\StaffDirectory.tsx":"7","C:\\Users\\Teresa\\Documents\\GitHub\\uonbegin-app\\src\\components\\InfoContainer.tsx":"8","C:\\Users\\Teresa\\Documents\\GitHub\\uonbegin-app\\src\\components\\NoMatch.tsx":"9","C:\\Users\\Teresa\\Documents\\GitHub\\uonbegin-app\\src\\components\\Login.tsx":"10","C:\\Users\\Teresa\\Documents\\GitHub\\uonbegin-app\\src\\components\\subcomponents\\BasicInfoBlockController.tsx":"11","C:\\Users\\Teresa\\Documents\\GitHub\\uonbegin-app\\src\\components\\subcomponents\\BasicInfoBlock.tsx":"12","C:\\Users\\Teresa\\Documents\\GitHub\\uonbegin-app\\src\\components\\editing-components\\InfoEditingForm.tsx":"13"},{"size":618,"mtime":1635903242035,"results":"14","hashOfConfig":"15"},{"size":440,"mtime":1635115730507,"results":"16","hashOfConfig":"15"},{"size":243,"mtime":1635115730481,"results":"17","hashOfConfig":"15"},{"size":469,"mtime":1635903242055,"results":"18","hashOfConfig":"15"},{"size":2548,"mtime":1635903242017,"results":"19","hashOfConfig":"15"},{"size":228,"mtime":1635903242052,"results":"20","hashOfConfig":"15"},{"size":1300,"mtime":1635903242023,"results":"21","hashOfConfig":"15"},{"size":1167,"mtime":1635903242019,"results":"22","hashOfConfig":"15"},{"size":284,"mtime":1635115730486,"results":"23","hashOfConfig":"15"},{"size":1528,"mtime":1635903242021,"results":"24","hashOfConfig":"15"},{"size":1099,"mtime":1635903242032,"results":"25","hashOfConfig":"15"},{"size":847,"mtime":1635903242029,"results":"26","hashOfConfig":"15"},{"size":1021,"mtime":1635903242027,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1tswe5",{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58"},"C:\\Users\\Teresa\\Documents\\GitHub\\uonbegin-app\\src\\index.tsx",[],"C:\\Users\\Teresa\\Documents\\GitHub\\uonbegin-app\\src\\reportWebVitals.ts",[],"C:\\Users\\Teresa\\Documents\\GitHub\\uonbegin-app\\src\\App.tsx",[],"C:\\Users\\Teresa\\Documents\\GitHub\\uonbegin-app\\src\\pages\\LandingPage.tsx",[],"C:\\Users\\Teresa\\Documents\\GitHub\\uonbegin-app\\src\\components\\Body.tsx",[],"C:\\Users\\Teresa\\Documents\\GitHub\\uonbegin-app\\src\\models\\user.ts",[],"C:\\Users\\Teresa\\Documents\\GitHub\\uonbegin-app\\src\\components\\StaffDirectory.tsx",["59","60"],"import React, { useEffect, useState } from 'react';\r\nimport { Staff } from '../models/staff';\r\nimport { User } from '../models/user';\r\nimport axios from 'axios';\r\n\r\nconst StaffDirectory = (props: {user: User}) => {\r\n  const [staffList,setStaffList] = useState([]);\r\n  const [page, setPage] = useState(1);\r\n  const [lastPage, setLastPage] = useState(0);\r\n\r\n  useEffect(() => {\r\n    (\r\n      async () => {\r\n        try {\r\n          const {data} = await axios.get('info/staff');\r\n          setStaffList(data.data);\r\n          setLastPage(data.meta.last_page);\r\n        } catch (error) {\r\n          console.log(error);\r\n        }\r\n      }\r\n    )()\r\n  },[page]);\r\n\r\n  const next = () => {\r\n    if (page < lastPage) {\r\n      setPage(page + 1);\r\n    }\r\n  }\r\n\r\n  const prev = () => {\r\n    if (page > 0) {\r\n      setPage(page - 1);\r\n    }\r\n  }\r\n\r\n  return(\r\n    <div id=\"staffDirectory\">\r\n      <div>\r\n        {/*This-is-gonna-be-the-search-bar*/\r\n\r\n        /*This-is-gonna-be-the-results-list*/}\r\n        <h1>Staff Directory</h1>\r\n\r\n        <button onClick = {prev}>Prev</button>\r\n        <button onClick = {next}>Next</button>\r\n      </div>\r\n      <div>\r\n        {/*This-is-gonna-be-the-section-that-shows-the-chosen-result*/}\r\n        \r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default StaffDirectory;\r\n","C:\\Users\\Teresa\\Documents\\GitHub\\uonbegin-app\\src\\components\\InfoContainer.tsx",["61"],"import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport '../App.css';\r\nimport BasicInfoBlockController from './subcomponents/BasicInfoBlockController';\r\nimport { Information } from '../models/information';\r\nimport { User } from '../models/user';\r\n\r\nconst InfoContainer = (props: {title: string, section_id: number, user: User}) => {\r\n  const [informationSet,setInformation] = useState([]);\r\n\r\n  useEffect(() => {\r\n    (\r\n      async () => {\r\n        try {\r\n          const {data} = await axios.get('info');\r\n          setInformation(data.data);\r\n        } catch (error) {\r\n          console.log(error);\r\n        }\r\n      }\r\n    )()\r\n  },[]);\r\n\r\n  return(\r\n    <div id={props.title}>\r\n      <h1>{props.title}</h1>\r\n      {informationSet.map((info: Information) => {\r\n        if (info.section_id === props.section_id) {\r\n          return (\r\n              <BasicInfoBlockController key = {info.id} id = {info.id} title = {info.title} body = {info.body}\r\n              section_id = {info.section_id} picture = {info.picture} user = {props.user} />\r\n          );\r\n        }\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default InfoContainer;\r\n","C:\\Users\\Teresa\\Documents\\GitHub\\uonbegin-app\\src\\components\\NoMatch.tsx",[],"C:\\Users\\Teresa\\Documents\\GitHub\\uonbegin-app\\src\\components\\Login.tsx",[],"C:\\Users\\Teresa\\Documents\\GitHub\\uonbegin-app\\src\\components\\subcomponents\\BasicInfoBlockController.tsx",["62","63"],"import React, { Component, useState } from 'react';\r\nimport { User } from '../../models/user';\r\nimport axios from 'axios';\r\nimport { Picture } from '../../models/picture';\r\nimport InfoEditingForm from \"../editing-components/InfoEditingForm\";\r\nimport BasicInfoBlock from \"./BasicInfoBlock\";\r\n\r\nconst BasicInfoBlockController = (props: {key: number, id: number, title: string, body: string,\r\n                        section_id: number, picture: Picture, user: User}) => {\r\n\r\n  const [isEditing,setIsEditing] = useState(false);\r\n\r\n  return (\r\n    <div>\r\n      {isEditing ?\r\n        <InfoEditingForm id = {props.id} title = {props.title} body = {props.body} section_id = {props.section_id}\r\n        picture = {props.picture} user = {props.user} isEditing= {isEditing} setIsEditing = {setIsEditing}/> :\r\n        <BasicInfoBlock id = {props.id} title = {props.title} body = {props.body} section_id = {props.section_id}\r\n        picture = {props.picture} user = {props.user} isEditing= {isEditing} setIsEditing = {setIsEditing}/>\r\n      }\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BasicInfoBlockController;\r\n","C:\\Users\\Teresa\\Documents\\GitHub\\uonbegin-app\\src\\components\\subcomponents\\BasicInfoBlock.tsx",["64"],"import React from 'react';\r\nimport { Picture } from '../../models/picture';\r\nimport { User } from '../../models/user';\r\n\r\nconst BasicInfoBlock = (props: {id: number, title: string, body: string, section_id: number, picture: Picture,\r\n   user: User, isEditing: boolean, setIsEditing?: (user: boolean | ((prevVar: boolean) => boolean)) => void}) => {\r\n\r\n  const changeEditStatus = () => {\r\n    if (props.setIsEditing !== undefined && props.isEditing !== undefined) {\r\n      props.setIsEditing(!props.isEditing);\r\n    }\r\n   }\r\n\r\n  return (\r\n    <div>\r\n      <h2>{props.title}</h2>{props.user.id !== 0 && <button onClick = {changeEditStatus}>Edit</button>}<br />\r\n      <p>{props.body}</p>\r\n      {props.picture !== undefined && props.picture !== null && <img src = {props.picture.pictureURL} />}\r\n    </div>\r\n  );\r\n}; export default BasicInfoBlock;\r\n","C:\\Users\\Teresa\\Documents\\GitHub\\uonbegin-app\\src\\components\\editing-components\\InfoEditingForm.tsx",["65","66","67","68"],"import React, {SyntheticEvent, useState} from 'react';\r\nimport axios from 'axios';\r\nimport { Picture } from '../../models/picture';\r\nimport { User } from '../../models/user';\r\n\r\nconst InfoEditingForm = (props: {id: number, title: string, body: string, section_id: number,\r\n  picture: Picture, user: User, isEditing: boolean, setIsEditing?: (user: boolean | ((prevVar: boolean) => boolean)) => void}) => {\r\n  const [count, setCount] = useState(0);\r\n\r\n  const submit = () => {\r\n\r\n  }\r\n\r\n  const changeEditStatus = () => {\r\n    if (props.setIsEditing !== undefined && props.isEditing !== undefined) {\r\n      props.setIsEditing(!props.isEditing);\r\n    }\r\n   }\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit = {submit}> <button onClick = {changeEditStatus}>View</button>\r\n        <input type = \"text\" placeholder = \"Header\" required />\r\n        <input type = \"text\" placeholder = \"Body of the information block\" required />\r\n        <input type = \"file\" />\r\n      </form>\r\n    </div>\r\n  )\r\n}; export default InfoEditingForm;\r\n",{"ruleId":"69","severity":1,"message":"70","line":2,"column":10,"nodeType":"71","messageId":"72","endLine":2,"endColumn":15},{"ruleId":"69","severity":1,"message":"73","line":7,"column":10,"nodeType":"71","messageId":"72","endLine":7,"endColumn":19},{"ruleId":"74","severity":1,"message":"75","line":27,"column":47,"nodeType":"76","messageId":"77","endLine":27,"endColumn":49},{"ruleId":"69","severity":1,"message":"78","line":1,"column":17,"nodeType":"71","messageId":"72","endLine":1,"endColumn":26},{"ruleId":"69","severity":1,"message":"79","line":3,"column":8,"nodeType":"71","messageId":"72","endLine":3,"endColumn":13},{"ruleId":"80","severity":1,"message":"81","line":18,"column":65,"nodeType":"82","endLine":18,"endColumn":105},{"ruleId":"69","severity":1,"message":"83","line":1,"column":16,"nodeType":"71","messageId":"72","endLine":1,"endColumn":30},{"ruleId":"69","severity":1,"message":"79","line":2,"column":8,"nodeType":"71","messageId":"72","endLine":2,"endColumn":13},{"ruleId":"69","severity":1,"message":"84","line":8,"column":10,"nodeType":"71","messageId":"72","endLine":8,"endColumn":15},{"ruleId":"69","severity":1,"message":"85","line":8,"column":17,"nodeType":"71","messageId":"72","endLine":8,"endColumn":25},"@typescript-eslint/no-unused-vars","'Staff' is defined but never used.","Identifier","unusedVar","'staffList' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'Component' is defined but never used.","'axios' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'SyntheticEvent' is defined but never used.","'count' is assigned a value but never used.","'setCount' is assigned a value but never used."]