<<<<<<< Updated upstream
[{"C:\\Users\\jn908\\UONBegin\\uonbegin-app\\src\\index.tsx":"1","C:\\Users\\jn908\\UONBegin\\uonbegin-app\\src\\reportWebVitals.ts":"2","C:\\Users\\jn908\\UONBegin\\uonbegin-app\\src\\App.tsx":"3","C:\\Users\\jn908\\UONBegin\\uonbegin-app\\src\\pages\\LandingPage.tsx":"4","C:\\Users\\jn908\\UONBegin\\uonbegin-app\\src\\components\\Body.tsx":"5","C:\\Users\\jn908\\UONBegin\\uonbegin-app\\src\\components\\StaffDirectory.tsx":"6","C:\\Users\\jn908\\UONBegin\\uonbegin-app\\src\\components\\NoMatch.tsx":"7","C:\\Users\\jn908\\UONBegin\\uonbegin-app\\src\\models\\user.ts":"8","C:\\Users\\jn908\\UONBegin\\uonbegin-app\\src\\components\\Login.tsx":"9","C:\\Users\\jn908\\UONBegin\\uonbegin-app\\src\\components\\InfoContainer.tsx":"10","C:\\Users\\jn908\\UONBegin\\uonbegin-app\\src\\models\\picture.ts":"11","C:\\Users\\jn908\\UONBegin\\uonbegin-app\\src\\components\\editing-components\\InfoEditingForm.tsx":"12","C:\\Users\\jn908\\UONBegin\\uonbegin-app\\src\\components\\editing-components\\ImageUploadBlock.tsx":"13","C:\\Users\\jn908\\UONBegin\\uonbegin-app\\src\\components\\subcomponents\\StaffSearchBrief.tsx":"14","C:\\Users\\jn908\\UONBegin\\uonbegin-app\\src\\models\\staff.ts":"15","C:\\Users\\jn908\\UONBegin\\uonbegin-app\\src\\components\\subcomponents\\StaffSearchResult.tsx":"16","C:\\Users\\jn908\\UONBegin\\uonbegin-app\\src\\components\\editing-components\\InfoCreationForm.tsx":"17","C:\\Users\\jn908\\UONBegin\\uonbegin-app\\src\\components\\subcomponents\\BasicInfoBlockController.tsx":"18","C:\\Users\\jn908\\UONBegin\\uonbegin-app\\src\\components\\subcomponents\\BasicInfoBlock.tsx":"19"},{"size":618,"mtime":1635809489807,"results":"20","hashOfConfig":"21"},{"size":425,"mtime":1633904213912,"results":"22","hashOfConfig":"21"},{"size":229,"mtime":1633904213836,"results":"23","hashOfConfig":"21"},{"size":469,"mtime":1635809489841,"results":"24","hashOfConfig":"21"},{"size":2644,"mtime":1635998105312,"results":"25","hashOfConfig":"21"},{"size":1750,"mtime":1636022093845,"results":"26","hashOfConfig":"21"},{"size":284,"mtime":1635650924062,"results":"27","hashOfConfig":"21"},{"size":228,"mtime":1635809489837,"results":"28","hashOfConfig":"21"},{"size":1500,"mtime":1636078174596,"results":"29","hashOfConfig":"21"},{"size":2006,"mtime":1636078174594,"results":"30","hashOfConfig":"21"},{"size":165,"mtime":1635809489824,"results":"31","hashOfConfig":"21"},{"size":2557,"mtime":1636078174599,"results":"32","hashOfConfig":"21"},{"size":1423,"mtime":1636017950700,"results":"33","hashOfConfig":"21"},{"size":645,"mtime":1636016519222,"results":"34","hashOfConfig":"21"},{"size":444,"mtime":1635809489826,"results":"35","hashOfConfig":"21"},{"size":1011,"mtime":1636020707247,"results":"36","hashOfConfig":"21"},{"size":2227,"mtime":1636029350528,"results":"37","hashOfConfig":"21"},{"size":1161,"mtime":1636078174603,"results":"38","hashOfConfig":"21"},{"size":1146,"mtime":1636078174601,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"1ulj410",{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"53","usedDeprecatedRules":"42"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"42"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"42"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"42"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"42"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\jn908\\UONBegin\\uonbegin-app\\src\\index.tsx",[],["84","85"],"C:\\Users\\jn908\\UONBegin\\uonbegin-app\\src\\reportWebVitals.ts",[],"C:\\Users\\jn908\\UONBegin\\uonbegin-app\\src\\App.tsx",[],"C:\\Users\\jn908\\UONBegin\\uonbegin-app\\src\\pages\\LandingPage.tsx",[],"C:\\Users\\jn908\\UONBegin\\uonbegin-app\\src\\components\\Body.tsx",[],"C:\\Users\\jn908\\UONBegin\\uonbegin-app\\src\\components\\StaffDirectory.tsx",["86"],"import React, { useEffect, useState } from 'react';\r\nimport { Staff } from '../models/staff';\r\nimport { User } from '../models/user';\r\nimport StaffSearchBrief from './subcomponents/StaffSearchBrief';\r\nimport StaffSearchResults from './subcomponents/StaffSearchResult';\r\nimport axios from 'axios';\r\n\r\nconst StaffDirectory = (props: {user: User}) => {\r\n  const [staffList,setStaffList] = useState([]);\r\n  const [chosenStaff, setChosenStaff] = useState(new Staff);\r\n  const [page, setPage] = useState(1);\r\n  const [lastPage, setLastPage] = useState(0);\r\n\r\n  useEffect(() => {\r\n    (\r\n      async () => {\r\n        try {\r\n          const {data} = await axios.get('staff');\r\n          setStaffList(data.data);\r\n          setLastPage(data.meta.last_page);\r\n        } catch (error) {\r\n          console.log(error);\r\n        }\r\n      }\r\n    )()\r\n  },[page]);\r\n\r\n  const next = () => {\r\n    if (page < lastPage) {\r\n      setPage(page + 1);\r\n    }\r\n  }\r\n\r\n  const prev = () => {\r\n    if (page > 0) {\r\n      setPage(page - 1);\r\n    }\r\n  }\r\n\r\n  return(\r\n    <div id=\"staffDirectory\">\r\n      <div>\r\n        {/*This-is-gonna-be-the-search-bar*/\r\n\r\n        /*This-is-gonna-be-the-results-list*/}\r\n        <h1>Staff Directory</h1>\r\n        {staffList.map((staff: Staff) => {\r\n          return(\r\n            <StaffSearchBrief key = {staff.id} staff = {staff} setChosenStaff = {setChosenStaff}/>\r\n          );\r\n        })}\r\n        <button onClick = {prev}>Prev</button>\r\n        <button onClick = {next}>Next</button>\r\n      </div>\r\n      <div>\r\n        {/*This-is-gonna-be-the-section-that-shows-the-chosen-result*/}\r\n        {chosenStaff.id !== 0 && <StaffSearchResults staff = {chosenStaff} />}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default StaffDirectory;\r\n","C:\\Users\\jn908\\UONBegin\\uonbegin-app\\src\\components\\NoMatch.tsx",[],"C:\\Users\\jn908\\UONBegin\\uonbegin-app\\src\\models\\user.ts",[],"C:\\Users\\jn908\\UONBegin\\uonbegin-app\\src\\components\\Login.tsx",[],"C:\\Users\\jn908\\UONBegin\\uonbegin-app\\src\\components\\InfoContainer.tsx",["87"],"C:\\Users\\jn908\\UONBegin\\uonbegin-app\\src\\models\\picture.ts",[],"C:\\Users\\jn908\\UONBegin\\uonbegin-app\\src\\components\\editing-components\\InfoEditingForm.tsx",["88","89","90","91"],"C:\\Users\\jn908\\UONBegin\\uonbegin-app\\src\\components\\editing-components\\ImageUploadBlock.tsx",["92","93"],"import React, { SyntheticEvent, useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst ImageUploadBlock = (props: {pictureID: number, setPictureID?: (pictureID: number | ((prevVar: number) => number)) => void}) => {\r\n  const [imageName, setImageName] = useState('');\r\n  const [altText, setAltText] = useState('');\r\n  const [image, setImage] = useState(new File([],''));\r\n\r\n  const upload = async () => {\r\n    const formData = new FormData();\r\n    if (image !== null || imageName !== null || altText !== null) {\r\n      formData.append('image', image);\r\n      formData.append('picture_name', imageName);\r\n      formData.append('alt_text', altText);\r\n      try {\r\n        const {data} = await axios.post('upload', formData);\r\n        if (props.setPictureID !== undefined) {\r\n          props.setPictureID(data.picture_id);\r\n          alert('Image Uploaded Successfully');\r\n        }\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    }\r\n  }\r\n\r\n  return(\r\n    <div>\r\n      <p>Image must be uploaded before other changes are submitted</p>\r\n      <label>Image Name</label>\r\n      <input type = \"text\" onChange = {e => setImageName(e.target.value)} required />\r\n      <label>Alternative Text for image</label>\r\n      <input type = \"text\" onChange = {e => setAltText(e.target.value)} required />\r\n      <button onClick = {upload}>Upload Image</button>\r\n    </div>\r\n  );\r\n}; export default ImageUploadBlock;\r\n","C:\\Users\\jn908\\UONBegin\\uonbegin-app\\src\\components\\subcomponents\\StaffSearchBrief.tsx",["94","95"],"import React, {Component} from 'react';\nimport { Staff } from '../../models/staff';\n\nconst StaffSearchBrief = (props: {staff: Staff, setChosenStaff: (staff: Staff | ((prevVar: Staff) => Staff)) => void}) => {\n  /*This is the short version that shows up during a search, multiple of these\n  tiles will have to fit on the screen at the same time*/\n  return(\n    <a onClick = {() => props.setChosenStaff(props.staff)}>\n      <div>\n        <h3>{props.staff.name}</h3><br />\n        <p>Contact email: {props.staff.contact_email}</p>\n        <p>Office Room: {props.staff.office_room}</p>\n      </div>\n    </a>\n  );\n}\n\nexport default StaffSearchBrief;\n","C:\\Users\\jn908\\UONBegin\\uonbegin-app\\src\\models\\staff.ts",[],"C:\\Users\\jn908\\UONBegin\\uonbegin-app\\src\\components\\subcomponents\\StaffSearchResult.tsx",["96","97"],"import React, {Component} from 'react';\nimport { Staff } from '../../models/staff';\n\nconst StaffSearchResults = (props: {staff: Staff}) => {\n  /*This is the long version that shows up after the user makes a selection*/\n  return(\n    <div>\n      <h3>{props.staff.name}</h3>\n      <p>{props.staff.about}</p>\n      <p>Contact Information:\n      <ul>\n        <li>Contact Email {props.staff.contact_email}</li>\n        <li>Contact Phone {props.staff.contact_phone}</li>\n        <li>Contact Mobile {props.staff.contact_mobile}</li>\n        <li>Contact Fax {props.staff.contact_fax}</li>\n      </ul>\n      </p>\n      <p>Focus Area and office:\n      <ul>\n        <li>Focus Area {props.staff.focus_area}</li>\n        <li>Office Room {props.staff.office_room}</li>\n        <li>Office Building {props.staff.office_building}</li>\n        <li>Office Location {props.staff.office_location}</li>\n      </ul>\n      </p>\n      <img src = {props.staff.picture.pictureURL} />\n    </div>\n  );\n}\n\nexport default StaffSearchResults;\n","C:\\Users\\jn908\\UONBegin\\uonbegin-app\\src\\components\\editing-components\\InfoCreationForm.tsx",["98","99","100","101"],"import React, { SyntheticEvent, useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport ImageUploadBlock from './ImageUploadBlock';\r\nimport { Picture } from '../../models/picture';\r\n\r\nconst InfoCreationForm = (props: {section_id: number, pictureArray: Picture[]}) => {\r\n  const [title, setTitle] = useState('');\r\n  const [body, setBody] = useState('');\r\n  const [pictureID, setPictureID] = useState(0);\r\n  const [imageStatus, setImageStatus] = useState(0);\r\n\r\n  const submit = async (e: SyntheticEvent) => {\r\n    e.preventDefault();\r\n    try {\r\n      const {data} = await axios.post('info', {\r\n          title,\r\n          body,\r\n          section_id: props.section_id\r\n      })\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  const imageBlock = (imageStatus: number) => {\r\n    if (imageStatus === 1) {\r\n      return(\r\n         <ImageUploadBlock pictureID = {pictureID} setPictureID = {setPictureID}/>\r\n      );\r\n    } else if (imageStatus === 2) {\r\n      return(\r\n        <select onChange = {e => setPictureID(parseInt(e.target.value))}>\r\n          {props.pictureArray.map((picture: Picture) => {\r\n            return (\r\n              <option key = {picture.picture_id} value = {picture.picture_id}>{picture.picture_name}</option>\r\n            )\r\n          })}\r\n        </select>\r\n      );\r\n    }\r\n    return(<p>Affirmative</p>);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit = {submit}>\r\n        <label>Head</label><br />\r\n        <input type = \"text\" onChange = {e => setTitle(e.target.value)}\r\n        placeholder = \"Header\" required /><br />\r\n        <label>Body</label><br />\r\n        <input type = \"text\" onChange = {e => setBody(e.target.value)}\r\n        placeholder = \"Body of the information block\" required /><br />\r\n        <label>Would you like to use an image?</label><br />\r\n        <select onChange = {e => setImageStatus(parseInt(e.target.value))}>\r\n          <option value = \"0\">No</option>\r\n          <option value = \"1\">Yes, I'd like to upload one</option>\r\n          <option value = \"2\">Yes, there's one on the database</option>\r\n        </select>\r\n        <button type = \"submit\">Submit</button>\r\n      </form>\r\n    </div>\r\n  )\r\n}; export default InfoCreationForm;\r\n","C:\\Users\\jn908\\UONBegin\\uonbegin-app\\src\\components\\subcomponents\\BasicInfoBlockController.tsx",["102","103"],"C:\\Users\\jn908\\UONBegin\\uonbegin-app\\src\\components\\subcomponents\\BasicInfoBlock.tsx",["104"],{"ruleId":"105","replacedBy":"106"},{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","severity":1,"message":"110","line":10,"column":50,"nodeType":"111","messageId":"112","endLine":10,"endColumn":59,"fix":"113"},{"ruleId":"114","severity":1,"message":"115","line":47,"column":47,"nodeType":"116","messageId":"117","endLine":47,"endColumn":49},{"ruleId":"118","severity":1,"message":"119","line":9,"column":10,"nodeType":"120","messageId":"121","endLine":9,"endColumn":15},{"ruleId":"118","severity":1,"message":"122","line":9,"column":17,"nodeType":"120","messageId":"121","endLine":9,"endColumn":25},{"ruleId":"118","severity":1,"message":"123","line":17,"column":14,"nodeType":"120","messageId":"121","endLine":17,"endColumn":18},{"ruleId":"118","severity":1,"message":"124","line":32,"column":10,"nodeType":"120","messageId":"121","endLine":32,"endColumn":26},{"ruleId":"118","severity":1,"message":"125","line":1,"column":17,"nodeType":"120","messageId":"121","endLine":1,"endColumn":31},{"ruleId":"118","severity":1,"message":"126","line":7,"column":17,"nodeType":"120","messageId":"121","endLine":7,"endColumn":25},{"ruleId":"118","severity":1,"message":"127","line":1,"column":16,"nodeType":"120","messageId":"121","endLine":1,"endColumn":25},{"ruleId":"128","severity":1,"message":"129","line":8,"column":5,"nodeType":"130","endLine":8,"endColumn":60},{"ruleId":"118","severity":1,"message":"127","line":1,"column":16,"nodeType":"120","messageId":"121","endLine":1,"endColumn":25},{"ruleId":"131","severity":1,"message":"132","line":26,"column":7,"nodeType":"130","endLine":26,"endColumn":53},{"ruleId":"118","severity":1,"message":"133","line":1,"column":33,"nodeType":"120","messageId":"121","endLine":1,"endColumn":42},{"ruleId":"118","severity":1,"message":"134","line":10,"column":10,"nodeType":"120","messageId":"121","endLine":10,"endColumn":21},{"ruleId":"118","severity":1,"message":"123","line":15,"column":14,"nodeType":"120","messageId":"121","endLine":15,"endColumn":18},{"ruleId":"118","severity":1,"message":"135","line":25,"column":9,"nodeType":"120","messageId":"121","endLine":25,"endColumn":19},{"ruleId":"118","severity":1,"message":"133","line":1,"column":17,"nodeType":"120","messageId":"121","endLine":1,"endColumn":26},{"ruleId":"118","severity":1,"message":"136","line":3,"column":8,"nodeType":"120","messageId":"121","endLine":3,"endColumn":13},{"ruleId":"131","severity":1,"message":"132","line":27,"column":65,"nodeType":"130","endLine":27,"endColumn":105},"no-native-reassign",["137"],"no-negated-in-lhs",["138"],"new-parens","Missing '()' invoking a constructor.","NewExpression","missing",{"range":"139","text":"140"},"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","@typescript-eslint/no-unused-vars","'count' is assigned a value but never used.","Identifier","unusedVar","'setCount' is assigned a value but never used.","'data' is assigned a value but never used.","'checkImageStatus' is assigned a value but never used.","'SyntheticEvent' is defined but never used.","'setImage' is assigned a value but never used.","'Component' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'useEffect' is defined but never used.","'imageStatus' is assigned a value but never used.","'imageBlock' is assigned a value but never used.","'axios' is defined but never used.","no-global-assign","no-unsafe-negation",[459,459],"()"]
=======
[{"C:\\Users\\jn908\\UONBegin\\uonbegin-app\\src\\index.tsx":"1","C:\\Users\\jn908\\UONBegin\\uonbegin-app\\src\\reportWebVitals.ts":"2","C:\\Users\\jn908\\UONBegin\\uonbegin-app\\src\\App.tsx":"3","C:\\Users\\jn908\\UONBegin\\uonbegin-app\\src\\pages\\LandingPage.tsx":"4","C:\\Users\\jn908\\UONBegin\\uonbegin-app\\src\\components\\Body.tsx":"5","C:\\Users\\jn908\\UONBegin\\uonbegin-app\\src\\components\\StaffDirectory.tsx":"6","C:\\Users\\jn908\\UONBegin\\uonbegin-app\\src\\components\\NoMatch.tsx":"7","C:\\Users\\jn908\\UONBegin\\uonbegin-app\\src\\models\\user.ts":"8","C:\\Users\\jn908\\UONBegin\\uonbegin-app\\src\\components\\Login.tsx":"9","C:\\Users\\jn908\\UONBegin\\uonbegin-app\\src\\components\\InfoContainer.tsx":"10","C:\\Users\\jn908\\UONBegin\\uonbegin-app\\src\\models\\picture.ts":"11","C:\\Users\\jn908\\UONBegin\\uonbegin-app\\src\\components\\editing-components\\InfoEditingForm.tsx":"12","C:\\Users\\jn908\\UONBegin\\uonbegin-app\\src\\components\\editing-components\\ImageUploadBlock.tsx":"13","C:\\Users\\jn908\\UONBegin\\uonbegin-app\\src\\components\\subcomponents\\StaffSearchBrief.tsx":"14","C:\\Users\\jn908\\UONBegin\\uonbegin-app\\src\\models\\staff.ts":"15","C:\\Users\\jn908\\UONBegin\\uonbegin-app\\src\\components\\subcomponents\\StaffSearchResult.tsx":"16","C:\\Users\\jn908\\UONBegin\\uonbegin-app\\src\\components\\editing-components\\InfoCreationForm.tsx":"17"},{"size":618,"mtime":1635809489807,"results":"18","hashOfConfig":"19"},{"size":425,"mtime":1633904213912,"results":"20","hashOfConfig":"19"},{"size":229,"mtime":1633904213836,"results":"21","hashOfConfig":"19"},{"size":469,"mtime":1635809489841,"results":"22","hashOfConfig":"19"},{"size":2644,"mtime":1635998105312,"results":"23","hashOfConfig":"19"},{"size":1750,"mtime":1636022093845,"results":"24","hashOfConfig":"19"},{"size":284,"mtime":1635650924062,"results":"25","hashOfConfig":"19"},{"size":228,"mtime":1635809489837,"results":"26","hashOfConfig":"19"},{"size":1380,"mtime":1636028934917,"results":"27","hashOfConfig":"19"},{"size":2122,"mtime":1636066968266,"results":"28","hashOfConfig":"19"},{"size":165,"mtime":1635809489824,"results":"29","hashOfConfig":"19"},{"size":2614,"mtime":1636029312804,"results":"30","hashOfConfig":"19"},{"size":1423,"mtime":1636017950700,"results":"31","hashOfConfig":"19"},{"size":645,"mtime":1636016519222,"results":"32","hashOfConfig":"19"},{"size":444,"mtime":1635809489826,"results":"33","hashOfConfig":"19"},{"size":1011,"mtime":1636020707247,"results":"34","hashOfConfig":"19"},{"size":2227,"mtime":1636029350528,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"1ulj410",{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"49","usedDeprecatedRules":"38"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"63"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"38"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"38"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"38"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"38"},"C:\\Users\\jn908\\UONBegin\\uonbegin-app\\src\\index.tsx",[],["78","79"],"C:\\Users\\jn908\\UONBegin\\uonbegin-app\\src\\reportWebVitals.ts",[],"C:\\Users\\jn908\\UONBegin\\uonbegin-app\\src\\App.tsx",[],"C:\\Users\\jn908\\UONBegin\\uonbegin-app\\src\\pages\\LandingPage.tsx",[],"C:\\Users\\jn908\\UONBegin\\uonbegin-app\\src\\components\\Body.tsx",[],"C:\\Users\\jn908\\UONBegin\\uonbegin-app\\src\\components\\StaffDirectory.tsx",["80"],"import React, { useEffect, useState } from 'react';\r\nimport { Staff } from '../models/staff';\r\nimport { User } from '../models/user';\r\nimport StaffSearchBrief from './subcomponents/StaffSearchBrief';\r\nimport StaffSearchResults from './subcomponents/StaffSearchResult';\r\nimport axios from 'axios';\r\n\r\nconst StaffDirectory = (props: {user: User}) => {\r\n  const [staffList,setStaffList] = useState([]);\r\n  const [chosenStaff, setChosenStaff] = useState(new Staff);\r\n  const [page, setPage] = useState(1);\r\n  const [lastPage, setLastPage] = useState(0);\r\n\r\n  useEffect(() => {\r\n    (\r\n      async () => {\r\n        try {\r\n          const {data} = await axios.get('staff');\r\n          setStaffList(data.data);\r\n          setLastPage(data.meta.last_page);\r\n        } catch (error) {\r\n          console.log(error);\r\n        }\r\n      }\r\n    )()\r\n  },[page]);\r\n\r\n  const next = () => {\r\n    if (page < lastPage) {\r\n      setPage(page + 1);\r\n    }\r\n  }\r\n\r\n  const prev = () => {\r\n    if (page > 0) {\r\n      setPage(page - 1);\r\n    }\r\n  }\r\n\r\n  return(\r\n    <div id=\"staffDirectory\">\r\n      <div>\r\n        {/*This-is-gonna-be-the-search-bar*/\r\n\r\n        /*This-is-gonna-be-the-results-list*/}\r\n        <h1>Staff Directory</h1>\r\n        {staffList.map((staff: Staff) => {\r\n          return(\r\n            <StaffSearchBrief key = {staff.id} staff = {staff} setChosenStaff = {setChosenStaff}/>\r\n          );\r\n        })}\r\n        <button onClick = {prev}>Prev</button>\r\n        <button onClick = {next}>Next</button>\r\n      </div>\r\n      <div>\r\n        {/*This-is-gonna-be-the-section-that-shows-the-chosen-result*/}\r\n        {chosenStaff.id !== 0 && <StaffSearchResults staff = {chosenStaff} />}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default StaffDirectory;\r\n","C:\\Users\\jn908\\UONBegin\\uonbegin-app\\src\\components\\NoMatch.tsx",[],"C:\\Users\\jn908\\UONBegin\\uonbegin-app\\src\\models\\user.ts",[],"C:\\Users\\jn908\\UONBegin\\uonbegin-app\\src\\components\\Login.tsx",[],"C:\\Users\\jn908\\UONBegin\\uonbegin-app\\src\\components\\InfoContainer.tsx",["81","82","83","84","85"],"C:\\Users\\jn908\\UONBegin\\uonbegin-app\\src\\models\\picture.ts",[],"C:\\Users\\jn908\\UONBegin\\uonbegin-app\\src\\components\\editing-components\\InfoEditingForm.tsx",["86","87","88","89","90"],"import React, {SyntheticEvent, useState} from 'react';\r\nimport axios from 'axios';\r\nimport { Picture } from '../../models/picture';\r\nimport { User } from '../../models/user';\r\nimport { Information } from '../../models/information';\r\nimport ImageUploadBlock from './ImageUploadBlock';\r\n\r\nconst InfoEditingForm = (props: {id: number, title: string, body: string, section_id: number, picture: Picture, user: User, isEditing: boolean, pictureArray: Picture[],\r\n  setIsEditing?: (user: boolean | ((prevVar: boolean) => boolean)) => void}) => {\r\n  const [count, setCount] = useState(0);\r\n  const [imageStatus, setImageStatus] = useState(0);\r\n  const [pictureID, setPictureID] = useState(0);\r\n\r\n  const submit = async (e: SyntheticEvent) => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      const {data} = await axios.put(`info/${props.id}`,{\r\n        title: props.title,\r\n        body: props.body\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  const changeEditStatus = () => {\r\n    if (props.setIsEditing !== undefined && props.isEditing !== undefined) {\r\n      props.setIsEditing(!props.isEditing);\r\n    }\r\n   }\r\n\r\n   const checkImageStatus = () => {\r\n     if (imageStatus === 1) {\r\n       return(\r\n         <ImageUploadBlock pictureID = {pictureID} setPictureID = {setPictureID}/>\r\n       );\r\n     } else if (imageStatus === 2) {\r\n       return(\r\n         <select onChange = {e => setPictureID(parseInt(e.target.value))}>\r\n           {props.pictureArray.map((picture: Picture) => {\r\n             return (\r\n               <option key = {picture.picture_id} value = {picture.picture_id}>{picture.picture_name}</option>\r\n             )\r\n           })}\r\n         </select>\r\n       );\r\n     }\r\n     return(<p>Affirmative</p>);\r\n   }\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit = {submit}>\r\n        <label>Head</label> <button onClick = {changeEditStatus}>View</button><br />\r\n        <input type = \"text\" placeholder = \"Header\" defaultValue = {props.title} required /><br />\r\n        <label>Body</label><br />\r\n        <input type = \"text\" placeholder = \"Body of the information block\" defaultValue = {props.body} required /><br />\r\n        <label>Would you like to use an image?</label><br />\r\n        <select onChange = {e => setImageStatus(parseInt(e.target.value))}>\r\n          <option value = \"0\">No</option>\r\n          <option value = \"1\">Yes, I'd like to upload one</option>\r\n          <option value = \"2\">Yes, there's one on the database</option>\r\n        </select>\r\n        <button type = \"submit\">Submit</button>\r\n      </form>\r\n    </div>\r\n  )\r\n}; export default InfoEditingForm;\r\n",["91","92"],"C:\\Users\\jn908\\UONBegin\\uonbegin-app\\src\\components\\editing-components\\ImageUploadBlock.tsx",["93","94"],"import React, { SyntheticEvent, useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst ImageUploadBlock = (props: {pictureID: number, setPictureID?: (pictureID: number | ((prevVar: number) => number)) => void}) => {\r\n  const [imageName, setImageName] = useState('');\r\n  const [altText, setAltText] = useState('');\r\n  const [image, setImage] = useState(new File([],''));\r\n\r\n  const upload = async () => {\r\n    const formData = new FormData();\r\n    if (image !== null || imageName !== null || altText !== null) {\r\n      formData.append('image', image);\r\n      formData.append('picture_name', imageName);\r\n      formData.append('alt_text', altText);\r\n      try {\r\n        const {data} = await axios.post('upload', formData);\r\n        if (props.setPictureID !== undefined) {\r\n          props.setPictureID(data.picture_id);\r\n          alert('Image Uploaded Successfully');\r\n        }\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    }\r\n  }\r\n\r\n  return(\r\n    <div>\r\n      <p>Image must be uploaded before other changes are submitted</p>\r\n      <label>Image Name</label>\r\n      <input type = \"text\" onChange = {e => setImageName(e.target.value)} required />\r\n      <label>Alternative Text for image</label>\r\n      <input type = \"text\" onChange = {e => setAltText(e.target.value)} required />\r\n      <button onClick = {upload}>Upload Image</button>\r\n    </div>\r\n  );\r\n}; export default ImageUploadBlock;\r\n","C:\\Users\\jn908\\UONBegin\\uonbegin-app\\src\\components\\subcomponents\\StaffSearchBrief.tsx",["95","96"],"import React, {Component} from 'react';\nimport { Staff } from '../../models/staff';\n\nconst StaffSearchBrief = (props: {staff: Staff, setChosenStaff: (staff: Staff | ((prevVar: Staff) => Staff)) => void}) => {\n  /*This is the short version that shows up during a search, multiple of these\n  tiles will have to fit on the screen at the same time*/\n  return(\n    <a onClick = {() => props.setChosenStaff(props.staff)}>\n      <div>\n        <h3>{props.staff.name}</h3><br />\n        <p>Contact email: {props.staff.contact_email}</p>\n        <p>Office Room: {props.staff.office_room}</p>\n      </div>\n    </a>\n  );\n}\n\nexport default StaffSearchBrief;\n","C:\\Users\\jn908\\UONBegin\\uonbegin-app\\src\\models\\staff.ts",[],"C:\\Users\\jn908\\UONBegin\\uonbegin-app\\src\\components\\subcomponents\\StaffSearchResult.tsx",["97","98"],"import React, {Component} from 'react';\nimport { Staff } from '../../models/staff';\n\nconst StaffSearchResults = (props: {staff: Staff}) => {\n  /*This is the long version that shows up after the user makes a selection*/\n  return(\n    <div>\n      <h3>{props.staff.name}</h3>\n      <p>{props.staff.about}</p>\n      <p>Contact Information:\n      <ul>\n        <li>Contact Email {props.staff.contact_email}</li>\n        <li>Contact Phone {props.staff.contact_phone}</li>\n        <li>Contact Mobile {props.staff.contact_mobile}</li>\n        <li>Contact Fax {props.staff.contact_fax}</li>\n      </ul>\n      </p>\n      <p>Focus Area and office:\n      <ul>\n        <li>Focus Area {props.staff.focus_area}</li>\n        <li>Office Room {props.staff.office_room}</li>\n        <li>Office Building {props.staff.office_building}</li>\n        <li>Office Location {props.staff.office_location}</li>\n      </ul>\n      </p>\n      <img src = {props.staff.picture.pictureURL} />\n    </div>\n  );\n}\n\nexport default StaffSearchResults;\n","C:\\Users\\jn908\\UONBegin\\uonbegin-app\\src\\components\\editing-components\\InfoCreationForm.tsx",["99","100","101","102"],"import React, { SyntheticEvent, useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport ImageUploadBlock from './ImageUploadBlock';\r\nimport { Picture } from '../../models/picture';\r\n\r\nconst InfoCreationForm = (props: {section_id: number, pictureArray: Picture[]}) => {\r\n  const [title, setTitle] = useState('');\r\n  const [body, setBody] = useState('');\r\n  const [pictureID, setPictureID] = useState(0);\r\n  const [imageStatus, setImageStatus] = useState(0);\r\n\r\n  const submit = async (e: SyntheticEvent) => {\r\n    e.preventDefault();\r\n    try {\r\n      const {data} = await axios.post('info', {\r\n          title,\r\n          body,\r\n          section_id: props.section_id\r\n      })\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  const imageBlock = (imageStatus: number) => {\r\n    if (imageStatus === 1) {\r\n      return(\r\n         <ImageUploadBlock pictureID = {pictureID} setPictureID = {setPictureID}/>\r\n      );\r\n    } else if (imageStatus === 2) {\r\n      return(\r\n        <select onChange = {e => setPictureID(parseInt(e.target.value))}>\r\n          {props.pictureArray.map((picture: Picture) => {\r\n            return (\r\n              <option key = {picture.picture_id} value = {picture.picture_id}>{picture.picture_name}</option>\r\n            )\r\n          })}\r\n        </select>\r\n      );\r\n    }\r\n    return(<p>Affirmative</p>);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit = {submit}>\r\n        <label>Head</label><br />\r\n        <input type = \"text\" onChange = {e => setTitle(e.target.value)}\r\n        placeholder = \"Header\" required /><br />\r\n        <label>Body</label><br />\r\n        <input type = \"text\" onChange = {e => setBody(e.target.value)}\r\n        placeholder = \"Body of the information block\" required /><br />\r\n        <label>Would you like to use an image?</label><br />\r\n        <select onChange = {e => setImageStatus(parseInt(e.target.value))}>\r\n          <option value = \"0\">No</option>\r\n          <option value = \"1\">Yes, I'd like to upload one</option>\r\n          <option value = \"2\">Yes, there's one on the database</option>\r\n        </select>\r\n        <button type = \"submit\">Submit</button>\r\n      </form>\r\n    </div>\r\n  )\r\n}; export default InfoCreationForm;\r\n",{"ruleId":"103","replacedBy":"104"},{"ruleId":"105","replacedBy":"106"},{"ruleId":"107","severity":1,"message":"108","line":10,"column":50,"nodeType":"109","messageId":"110","endLine":10,"endColumn":59,"fix":"111"},{"ruleId":"112","severity":1,"message":"113","line":12,"column":10,"nodeType":"114","messageId":"115","endLine":12,"endColumn":19},{"ruleId":"112","severity":1,"message":"116","line":12,"column":21,"nodeType":"114","messageId":"115","endLine":12,"endColumn":33},{"ruleId":"112","severity":1,"message":"117","line":40,"column":9,"nodeType":"114","messageId":"115","endLine":40,"endColumn":22},{"ruleId":"118","severity":1,"message":"119","line":52,"column":44,"nodeType":"120","messageId":"121","endLine":52,"endColumn":46},{"ruleId":"122","severity":1,"message":"123","line":58,"column":71,"nodeType":"124","endLine":58,"endColumn":110},{"ruleId":"112","severity":1,"message":"125","line":5,"column":10,"nodeType":"114","messageId":"115","endLine":5,"endColumn":21},{"ruleId":"112","severity":1,"message":"126","line":10,"column":10,"nodeType":"114","messageId":"115","endLine":10,"endColumn":15},{"ruleId":"112","severity":1,"message":"127","line":10,"column":17,"nodeType":"114","messageId":"115","endLine":10,"endColumn":25},{"ruleId":"112","severity":1,"message":"128","line":18,"column":14,"nodeType":"114","messageId":"115","endLine":18,"endColumn":18},{"ruleId":"112","severity":1,"message":"129","line":33,"column":10,"nodeType":"114","messageId":"115","endLine":33,"endColumn":26},{"ruleId":"103","replacedBy":"130"},{"ruleId":"105","replacedBy":"131"},{"ruleId":"112","severity":1,"message":"132","line":1,"column":17,"nodeType":"114","messageId":"115","endLine":1,"endColumn":31},{"ruleId":"112","severity":1,"message":"133","line":7,"column":17,"nodeType":"114","messageId":"115","endLine":7,"endColumn":25},{"ruleId":"112","severity":1,"message":"134","line":1,"column":16,"nodeType":"114","messageId":"115","endLine":1,"endColumn":25},{"ruleId":"135","severity":1,"message":"136","line":8,"column":5,"nodeType":"124","endLine":8,"endColumn":60},{"ruleId":"112","severity":1,"message":"134","line":1,"column":16,"nodeType":"114","messageId":"115","endLine":1,"endColumn":25},{"ruleId":"122","severity":1,"message":"123","line":26,"column":7,"nodeType":"124","endLine":26,"endColumn":53},{"ruleId":"112","severity":1,"message":"137","line":1,"column":33,"nodeType":"114","messageId":"115","endLine":1,"endColumn":42},{"ruleId":"112","severity":1,"message":"138","line":10,"column":10,"nodeType":"114","messageId":"115","endLine":10,"endColumn":21},{"ruleId":"112","severity":1,"message":"128","line":15,"column":14,"nodeType":"114","messageId":"115","endLine":15,"endColumn":18},{"ruleId":"112","severity":1,"message":"139","line":25,"column":9,"nodeType":"114","messageId":"115","endLine":25,"endColumn":19},"no-native-reassign",["140"],"no-negated-in-lhs",["141"],"new-parens","Missing '()' invoking a constructor.","NewExpression","missing",{"range":"142","text":"143"},"@typescript-eslint/no-unused-vars","'isEditing' is assigned a value but never used.","Identifier","unusedVar","'setIsEditing' is assigned a value but never used.","'swapIsEditing' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Information' is defined but never used.","'count' is assigned a value but never used.","'setCount' is assigned a value but never used.","'data' is assigned a value but never used.","'checkImageStatus' is assigned a value but never used.",["140"],["141"],"'SyntheticEvent' is defined but never used.","'setImage' is assigned a value but never used.","'Component' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'useEffect' is defined but never used.","'imageStatus' is assigned a value but never used.","'imageBlock' is assigned a value but never used.","no-global-assign","no-unsafe-negation",[459,459],"()"]
>>>>>>> Stashed changes
