[{"C:\\Users\\Teresa\\Documents\\GitHub\\uonbegin-app\\src\\index.tsx":"1","C:\\Users\\Teresa\\Documents\\GitHub\\uonbegin-app\\src\\reportWebVitals.ts":"2","C:\\Users\\Teresa\\Documents\\GitHub\\uonbegin-app\\src\\App.tsx":"3","C:\\Users\\Teresa\\Documents\\GitHub\\uonbegin-app\\src\\pages\\LandingPage.tsx":"4","C:\\Users\\Teresa\\Documents\\GitHub\\uonbegin-app\\src\\components\\Body.tsx":"5","C:\\Users\\Teresa\\Documents\\GitHub\\uonbegin-app\\src\\components\\StaffDirectory.tsx":"6","C:\\Users\\Teresa\\Documents\\GitHub\\uonbegin-app\\src\\components\\NoMatch.tsx":"7","C:\\Users\\Teresa\\Documents\\GitHub\\uonbegin-app\\src\\models\\user.ts":"8","C:\\Users\\Teresa\\Documents\\GitHub\\uonbegin-app\\src\\components\\InfoContainer.tsx":"9","C:\\Users\\Teresa\\Documents\\GitHub\\uonbegin-app\\src\\components\\Login.tsx":"10","C:\\Users\\Teresa\\Documents\\GitHub\\uonbegin-app\\src\\models\\staff.ts":"11","C:\\Users\\Teresa\\Documents\\GitHub\\uonbegin-app\\src\\components\\subcomponents\\StaffSearchResult.tsx":"12","C:\\Users\\Teresa\\Documents\\GitHub\\uonbegin-app\\src\\components\\subcomponents\\StaffSearchBrief.tsx":"13","C:\\Users\\Teresa\\Documents\\GitHub\\uonbegin-app\\src\\components\\editing-components\\ImageUploadBlock.tsx":"14","C:\\Users\\Teresa\\Documents\\GitHub\\uonbegin-app\\src\\models\\information.ts":"15"},{"size":618,"mtime":1636259339915,"results":"16","hashOfConfig":"17"},{"size":440,"mtime":1635115730507,"results":"18","hashOfConfig":"17"},{"size":243,"mtime":1635115730481,"results":"19","hashOfConfig":"17"},{"size":714,"mtime":1636520603885,"results":"20","hashOfConfig":"17"},{"size":2741,"mtime":1636606549607,"results":"21","hashOfConfig":"17"},{"size":11583,"mtime":1636620088107,"results":"22","hashOfConfig":"17"},{"size":284,"mtime":1635115730486,"results":"23","hashOfConfig":"17"},{"size":228,"mtime":1636259339923,"results":"24","hashOfConfig":"17"},{"size":5789,"mtime":1636604391620,"results":"25","hashOfConfig":"17"},{"size":1510,"mtime":1636618647159,"results":"26","hashOfConfig":"17"},{"size":395,"mtime":1636420400769,"results":"27","hashOfConfig":"17"},{"size":1042,"mtime":1636259671105,"results":"28","hashOfConfig":"17"},{"size":663,"mtime":1636259671098,"results":"29","hashOfConfig":"17"},{"size":923,"mtime":1636420400764,"results":"30","hashOfConfig":"17"},{"size":173,"mtime":1636420400768,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"1tswe5",{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"34"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"34"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"C:\\Users\\Teresa\\Documents\\GitHub\\uonbegin-app\\src\\index.tsx",[],["66","67"],"C:\\Users\\Teresa\\Documents\\GitHub\\uonbegin-app\\src\\reportWebVitals.ts",[],"C:\\Users\\Teresa\\Documents\\GitHub\\uonbegin-app\\src\\App.tsx",[],"C:\\Users\\Teresa\\Documents\\GitHub\\uonbegin-app\\src\\pages\\LandingPage.tsx",[],"C:\\Users\\Teresa\\Documents\\GitHub\\uonbegin-app\\src\\components\\Body.tsx",[],"C:\\Users\\Teresa\\Documents\\GitHub\\uonbegin-app\\src\\components\\StaffDirectory.tsx",["68","69","70","71","72","73"],"import React, { SyntheticEvent, useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport StaffSearchBrief from './subcomponents/StaffSearchBrief';\r\nimport StaffSearchResults from './subcomponents/StaffSearchResult';\r\nimport ImageUploadBlock from './editing-components/ImageUploadBlock';\r\nimport { Staff } from '../models/staff';\r\nimport { User } from '../models/user';\r\n\r\nconst StaffDirectory = (props: {user: User}) => {\r\n  /*DB information*/\r\n  const [staffList,setStaffList] = useState([]);\r\n  /*the focus of the page*/\r\n  const [chosenStaff, setChosenStaff] = useState(new Staff());\r\n  /*State booleans*/\r\n  const [isEditing, setIsEditing] = useState(false);\r\n  const [newStaff, setNewStaff] = useState(false);\r\n  const [optionSelected, setOptionSelected] = useState(0);\r\n  /*Pagination methods*/\r\n  const [page, setPage] = useState(1);\r\n  const [lastPage, setLastPage] = useState(0);\r\n  /*Edit/Create variables*/\r\n  const [cName, setCName] = useState('');\r\n  const [cAbout, setCAbout] = useState('');\r\n  const [cContactEmail, setCContactEmail] = useState('');\r\n  const [cContactPhone, setCContactPhone] = useState('');\r\n  const [cContactModbile, setCContactMobile] = useState('');\r\n  const [cContactFax, setCContactFax] = useState('');\r\n  const [cFocusArea, setCFocusArea] = useState('');\r\n  const [cOfficeRoom, setCOfficeRoom] = useState('');\r\n  const [cOfficeBuilding, setCOfficeBuilding] = useState('');\r\n  const [cOfficeLocation, setCOfficeLocation] = useState('');\r\n  const [cPictureURL, setCPictureURL] = useState('');\r\n  const [eName, setEName] = useState('');\r\n  const [eAbout, setEAbout] = useState('');\r\n  const [eContactEmail, setEContactEmail] = useState('');\r\n  const [eContactPhone, setEContactPhone] = useState('');\r\n  const [eContactModbile, setEContactMobile] = useState('');\r\n  const [eContactFax, setEContactFax] = useState('');\r\n  const [eFocusArea, setEFocusArea] = useState('');\r\n  const [eOfficeRoom, setEOfficeRoom] = useState('');\r\n  const [eOfficeBuilding, setEOfficeBuilding] = useState('');\r\n  const [eOfficeLocation, setEOfficeLocation] = useState('');\r\n  const [ePictureURL, setEPictureURL] = useState('');\r\n  /*searchbar*/\r\n  const [search, setSearch] = useState('');\r\n\r\n  useEffect(() => {\r\n    (\r\n      async () => {\r\n        try {\r\n          const {data} = await axios.get(`staff?page=${page}`);\r\n          setStaffList(data.data);\r\n          setLastPage(data.meta.last_page);\r\n        } catch (error) {\r\n          console.log(error);\r\n        }\r\n      }\r\n    )()\r\n  },[page]);\r\n\r\n  const next = () => {\r\n    if (page < lastPage) {\r\n      setPage(page + 1);\r\n    }\r\n  }\r\n\r\n  const prev = () => {\r\n    if (page > 0) {\r\n      setPage(page - 1);\r\n    }\r\n  }\r\n\r\n  const submitCreate = async (e: SyntheticEvent) => {\r\n    e.preventDefault();\r\n    try {\r\n      const {data} = await axios.post('staff',{\r\n        name: cName,\r\n        about: cAbout,\r\n        contact_email: cContactEmail,\r\n        contact_phone: cContactPhone,\r\n        contact_mobile: cContactModbile,\r\n        contact_fax: cContactFax,\r\n        focus_area: cFocusArea,\r\n        office_room: cOfficeRoom,\r\n        office_building: cOfficeBuilding,\r\n        office_location: cOfficeLocation,\r\n        image_url: cPictureURL\r\n      });\r\n      setNewStaff(false);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n    try {\r\n      //All of the information\r\n      const {data} = await axios.get('staff');\r\n      setStaffList(data.data);\r\n      setLastPage(data.meta.last_page);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  const submitEdit = async (e: SyntheticEvent) => {\r\n    e.preventDefault();\r\n    try {\r\n      const {data} = await axios.put(`staff/${chosenStaff.id}`,{\r\n        name: eName,\r\n        about: eAbout,\r\n        contact_email: eContactEmail,\r\n        contact_phone: eContactPhone,\r\n        contact_mobile: eContactModbile,\r\n        contact_fax: eContactFax,\r\n        focus_area: eFocusArea,\r\n        office_room: eOfficeRoom,\r\n        office_building: eOfficeBuilding,\r\n        office_location: eOfficeLocation,\r\n        image_url: ePictureURL\r\n      });\r\n      setIsEditing(false);\r\n\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n    try {\r\n      //All of the information\r\n      const {data} = await axios.get('staff');\r\n      setStaffList(data.data);\r\n      setLastPage(data.meta.last_page);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  const del = async (id: number) => {\r\n    if (window.confirm('Are you sure you want to delete')) {\r\n      axios.delete(`staff/${id}`);\r\n\r\n      setStaffList(staffList.filter((staff: Staff) => staff.id !== id));\r\n    }\r\n  }\r\n\r\n  const commenceSearch = async () => {\r\n    try {\r\n      const {data} = await axios.get(`staff?page=${page}&?search=${search}`);\r\n      setStaffList(data.data);\r\n      setLastPage(data.meta.last_page);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  const ActiveSection = () => {\r\n    if (isEditing) {\r\n      return(\r\n        <div>\r\n          <form onSubmit = {submitEdit}><button onClick = {() => setIsEditing(!isEditing)}>View</button>\r\n          <label>Staff Name</label>\r\n          <input type = \"text\" onChange = {e => setEName(e.target.value)} defaultValue = {chosenStaff.name} required />\r\n          <label>About {chosenStaff.name}</label>\r\n          <input type = \"text\" onChange = {e => setEAbout(e.target.value)} defaultValue = {chosenStaff.about} required />\r\n          {/*Contact information section*/}\r\n          <label>Contact Information</label>\r\n          <label>Email</label>\r\n          <input type = \"text\" onChange = {e => setEContactEmail(e.target.value)} defaultValue = {chosenStaff.contact_email} required />\r\n          <label>Phone</label>\r\n          <input type = \"text\" onChange = {e => setEContactPhone(e.target.value)} defaultValue = {chosenStaff.contact_phone} required />\r\n          <label>Mobile</label>\r\n          <input type = \"text\" onChange = {e => setEContactMobile(e.target.value)} defaultValue = {chosenStaff.contact_mobile} required />\r\n          <label>Fax</label>\r\n          <input type = \"text\" onChange = {e => setEContactFax(e.target.value)} defaultValue = {chosenStaff.contact_fax} required />\r\n          <label>Focuse area and Office Location</label>\r\n          <label>Focus Area</label>\r\n          <input type = \"text\" onChange = {e => setEFocusArea(e.target.value)} defaultValue = {chosenStaff.focus_area} required />\r\n          <label>Office Room</label>\r\n          <input type = \"text\" onChange = {e => setEOfficeRoom(e.target.value)} defaultValue = {chosenStaff.office_room} required />\r\n          <label>Office Building</label>\r\n          <input type = \"text\" onChange = {e => setEOfficeBuilding(e.target.value)} defaultValue = {chosenStaff.office_building} required />\r\n          <label>Office Location</label>\r\n          <input type = \"text\" onChange = {e => setEOfficeLocation(e.target.value)} defaultValue = {chosenStaff.office_location} required />\r\n          <button onClick = {() => del(chosenStaff.id)}>Delete</button><br />\r\n          <label>Image</label>\r\n          <ImageUploadBlock pictureURL = {ePictureURL} setPictureURL = {setEPictureURL} />\r\n          <button type = \"submit\">Submit</button>\r\n          </form>\r\n        </div>\r\n      );\r\n    }\r\n    return(\r\n      <div id=\"staffDirectoryTile\">\r\n        <h3>{chosenStaff.name}</h3>{props.user.id !==0 && <button onClick = {() => setIsEditing(!isEditing)}>Edit</button>}\r\n        <hr />\r\n        <p>{chosenStaff.about}</p>\r\n        <p>Contact Information:\r\n        <ul>\r\n          <li>Contact Email: {chosenStaff.contact_email}</li>\r\n          <li>Contact Phone: {chosenStaff.contact_phone}</li>\r\n          <li>Contact Mobile: {chosenStaff.contact_mobile}</li>\r\n          <li>Contact Fax: {chosenStaff.contact_fax}</li>\r\n        </ul>\r\n        </p>\r\n        <p>Focus Area and Office:\r\n        <ul>\r\n          <li>Focus Area: {chosenStaff.focus_area}</li>\r\n          <li>Office Room: {chosenStaff.office_room}</li>\r\n          <li>Office Building: {chosenStaff.office_building}</li>\r\n          <li>Office Location: {chosenStaff.office_location}</li>\r\n        </ul>\r\n        </p>{props.user.id !==0 && <button onClick = {() => del(chosenStaff.id)}>Delete</button>}<br />\r\n        <img src = {chosenStaff.image_url} />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const CreateFormButton = () => {\r\n    if (newStaff) {return(<button onClick = {() => setNewStaff(false)}>Close Form</button>);}\r\n    return(<button onClick = {() => setNewStaff(true)}>Create</button>);\r\n  }\r\n\r\n  return(\r\n    <div id=\"staffDirectory\">\r\n      <div>\r\n        {/*Title section*/}\r\n        <h1>Staff Directory</h1><br />\r\n        <input type = \"text\" placeholder = \"Enter a name here to narrow your search...\" onChange = {(e) => setSearch(e.target.value)} className = \"searchbar\"/><br />\r\n        <button onClick = {commenceSearch}>Search</button>\r\n      </div>\r\n      <div>\r\n        {/*adding new sections to the database*/}\r\n        {props.user.id !== 0 && <CreateFormButton />}\r\n        {newStaff &&\r\n          <div>\r\n            <form onSubmit = {submitCreate}><br />\r\n            <label>Staff Name</label><br />\r\n            <input type = \"text\" onChange = {e => setCName(e.target.value)} required /><br />\r\n            <label>About {cName}</label><br />\r\n            <input type = \"text\" onChange = {e => setCAbout(e.target.value)} required /><br />\r\n            {/*Contact information section*/}\r\n            <label>Contact Information</label><br />\r\n            <label>Email</label><br />\r\n            <input type = \"text\" onChange = {e => setCContactEmail(e.target.value)} required /><br />\r\n            <label>Phone</label><br />\r\n            <input type = \"text\" onChange = {e => setCContactPhone(e.target.value)} required /><br />\r\n            <label>Mobile</label><br />\r\n            <input type = \"text\" onChange = {e => setCContactMobile(e.target.value)} required /><br />\r\n            <label>Fax</label><br />\r\n            <input type = \"text\" onChange = {e => setCContactFax(e.target.value)} required /><br />\r\n            <label>Focuse area and Office Location</label><br />\r\n            <label>Focus Area</label><br />\r\n            <input type = \"text\" onChange = {e => setCFocusArea(e.target.value)} required /><br />\r\n            <label>Office Room</label><br />\r\n            <input type = \"text\" onChange = {e => setCOfficeRoom(e.target.value)} required /><br />\r\n            <label>Office Building</label><br />\r\n            {cOfficeBuilding}\r\n            <input type = \"text\" onChange = {e => setCOfficeBuilding(e.target.value)} required /><br />\r\n            <label>Office Location</label><br />\r\n            <input type = \"text\" onChange = {e => setCOfficeLocation(e.target.value)} required /><br />\r\n            <label>Image</label><br />\r\n            <p>{cPictureURL}</p><br/>\r\n            <ImageUploadBlock pictureURL = {cPictureURL} setPictureURL = {setCPictureURL} /><br />\r\n            <button type = \"submit\">Submit</button>\r\n            </form>\r\n          </div>\r\n        }\r\n        {/*Search results section*/}\r\n        {staffList.map((staff: Staff) => {\r\n          if (staff.id === chosenStaff.id) {\r\n            return(<ActiveSection />);\r\n          } else {\r\n            return(\r\n              <StaffSearchBrief key = {staff.id} staff = {staff} setChosenStaff = {setChosenStaff}/>\r\n            );\r\n          }\r\n        })}<br />\r\n        <button onClick = {prev}>Prev</button>\r\n        <button onClick = {next}>Next</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default StaffDirectory;\r\n","C:\\Users\\Teresa\\Documents\\GitHub\\uonbegin-app\\src\\components\\NoMatch.tsx",[],"C:\\Users\\Teresa\\Documents\\GitHub\\uonbegin-app\\src\\models\\user.ts",[],"C:\\Users\\Teresa\\Documents\\GitHub\\uonbegin-app\\src\\components\\InfoContainer.tsx",["74","75","76","77","78","79","80","81","82"],"C:\\Users\\Teresa\\Documents\\GitHub\\uonbegin-app\\src\\components\\Login.tsx",[],"C:\\Users\\Teresa\\Documents\\GitHub\\uonbegin-app\\src\\models\\staff.ts",[],"C:\\Users\\Teresa\\Documents\\GitHub\\uonbegin-app\\src\\components\\subcomponents\\StaffSearchResult.tsx",["83","84"],"C:\\Users\\Teresa\\Documents\\GitHub\\uonbegin-app\\src\\components\\subcomponents\\StaffSearchBrief.tsx",["85","86"],"import React, {Component} from 'react';\r\nimport { Staff } from '../../models/staff';\r\n\r\nconst StaffSearchBrief = (props: {staff: Staff, setChosenStaff: (staff: Staff | ((prevVar: Staff) => Staff)) => void}) => {\r\n  /*This is the short version that shows up during a search, multiple of these\r\n  tiles will have to fit on the screen at the same time*/\r\n  return(\r\n    <a onClick = {() => props.setChosenStaff(props.staff)}>\r\n      <div>\r\n        <h3>{props.staff.name}</h3><br />\r\n        <p>Contact email: {props.staff.contact_email}</p>\r\n        <p>Office Room: {props.staff.office_room}</p>\r\n      </div>\r\n    </a>\r\n  );\r\n}\r\n\r\nexport default StaffSearchBrief;\r\n","C:\\Users\\Teresa\\Documents\\GitHub\\uonbegin-app\\src\\components\\editing-components\\ImageUploadBlock.tsx",["87","88","89","90","91"],"import React, { SyntheticEvent, useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst ImageUploadBlock = (props: {pictureURL: string, setPictureURL?: (pictureURL: string | ((prevVar: string) => string)) => void}) => {\r\n  const [imageName, setImageName] = useState('');\r\n  const [altText, setAltText] = useState('');\r\n\r\n  const upload = async (files: FileList | null) => {\r\n    const formData = new FormData();\r\n    if (files === null) return;\r\n      formData.append('image', files[0]);\r\n    try {\r\n      const {data} = await axios.post('upload', formData);\r\n      if (props.setPictureURL !== undefined) {\r\n        props.setPictureURL(data.url);\r\n        alert('Image Uploaded Successfully');\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  return(\r\n    <div>\r\n      <input type = \"file\" onChange = {e => upload(e.target.files)} />\r\n    </div>\r\n  );\r\n}; export default ImageUploadBlock;\r\n","C:\\Users\\Teresa\\Documents\\GitHub\\uonbegin-app\\src\\models\\information.ts",[],{"ruleId":"92","replacedBy":"93"},{"ruleId":"94","replacedBy":"95"},{"ruleId":"96","severity":1,"message":"97","line":4,"column":8,"nodeType":"98","messageId":"99","endLine":4,"endColumn":26},{"ruleId":"96","severity":1,"message":"100","line":17,"column":10,"nodeType":"98","messageId":"99","endLine":17,"endColumn":24},{"ruleId":"96","severity":1,"message":"101","line":17,"column":26,"nodeType":"98","messageId":"99","endLine":17,"endColumn":43},{"ruleId":"96","severity":1,"message":"102","line":76,"column":14,"nodeType":"98","messageId":"99","endLine":76,"endColumn":18},{"ruleId":"96","severity":1,"message":"102","line":106,"column":14,"nodeType":"98","messageId":"99","endLine":106,"endColumn":18},{"ruleId":"103","severity":1,"message":"104","line":209,"column":9,"nodeType":"105","endLine":209,"endColumn":46},{"ruleId":"96","severity":1,"message":"100","line":16,"column":10,"nodeType":"98","messageId":"99","endLine":16,"endColumn":24},{"ruleId":"96","severity":1,"message":"101","line":16,"column":26,"nodeType":"98","messageId":"99","endLine":16,"endColumn":43},{"ruleId":"96","severity":1,"message":"106","line":18,"column":10,"nodeType":"98","messageId":"99","endLine":18,"endColumn":19},{"ruleId":"96","severity":1,"message":"107","line":18,"column":21,"nodeType":"98","messageId":"99","endLine":18,"endColumn":33},{"ruleId":"96","severity":1,"message":"108","line":20,"column":15,"nodeType":"98","messageId":"99","endLine":20,"endColumn":21},{"ruleId":"96","severity":1,"message":"102","line":58,"column":14,"nodeType":"98","messageId":"99","endLine":58,"endColumn":18},{"ruleId":"96","severity":1,"message":"102","line":80,"column":14,"nodeType":"98","messageId":"99","endLine":80,"endColumn":18},{"ruleId":"109","severity":1,"message":"110","line":127,"column":44,"nodeType":"111","messageId":"112","endLine":127,"endColumn":46},{"ruleId":"103","severity":1,"message":"104","line":151,"column":75,"nodeType":"105","endLine":151,"endColumn":105},{"ruleId":"96","severity":1,"message":"113","line":1,"column":16,"nodeType":"98","messageId":"99","endLine":1,"endColumn":25},{"ruleId":"103","severity":1,"message":"104","line":26,"column":7,"nodeType":"105","endLine":26,"endColumn":53},{"ruleId":"96","severity":1,"message":"113","line":1,"column":16,"nodeType":"98","messageId":"99","endLine":1,"endColumn":25},{"ruleId":"114","severity":1,"message":"115","line":8,"column":5,"nodeType":"105","endLine":8,"endColumn":60},{"ruleId":"96","severity":1,"message":"116","line":1,"column":17,"nodeType":"98","messageId":"99","endLine":1,"endColumn":31},{"ruleId":"96","severity":1,"message":"117","line":5,"column":10,"nodeType":"98","messageId":"99","endLine":5,"endColumn":19},{"ruleId":"96","severity":1,"message":"118","line":5,"column":21,"nodeType":"98","messageId":"99","endLine":5,"endColumn":33},{"ruleId":"96","severity":1,"message":"119","line":6,"column":10,"nodeType":"98","messageId":"99","endLine":6,"endColumn":17},{"ruleId":"96","severity":1,"message":"120","line":6,"column":19,"nodeType":"98","messageId":"99","endLine":6,"endColumn":29},"no-native-reassign",["121"],"no-negated-in-lhs",["122"],"@typescript-eslint/no-unused-vars","'StaffSearchResults' is defined but never used.","Identifier","unusedVar","'optionSelected' is assigned a value but never used.","'setOptionSelected' is assigned a value but never used.","'data' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'pictureID' is assigned a value but never used.","'setPictureID' is assigned a value but never used.","'setEID' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'Component' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'SyntheticEvent' is defined but never used.","'imageName' is assigned a value but never used.","'setImageName' is assigned a value but never used.","'altText' is assigned a value but never used.","'setAltText' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]