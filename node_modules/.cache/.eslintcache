[{"C:\\Users\\Teresa\\Documents\\GitHub\\uonbegin-app\\src\\index.tsx":"1","C:\\Users\\Teresa\\Documents\\GitHub\\uonbegin-app\\src\\reportWebVitals.ts":"2","C:\\Users\\Teresa\\Documents\\GitHub\\uonbegin-app\\src\\App.tsx":"3","C:\\Users\\Teresa\\Documents\\GitHub\\uonbegin-app\\src\\pages\\LandingPage.tsx":"4","C:\\Users\\Teresa\\Documents\\GitHub\\uonbegin-app\\src\\components\\Body.tsx":"5","C:\\Users\\Teresa\\Documents\\GitHub\\uonbegin-app\\src\\models\\user.ts":"6","C:\\Users\\Teresa\\Documents\\GitHub\\uonbegin-app\\src\\components\\Login.tsx":"7","C:\\Users\\Teresa\\Documents\\GitHub\\uonbegin-app\\src\\components\\StaffDirectory.tsx":"8","C:\\Users\\Teresa\\Documents\\GitHub\\uonbegin-app\\src\\components\\InfoContainer.tsx":"9","C:\\Users\\Teresa\\Documents\\GitHub\\uonbegin-app\\src\\components\\NoMatch.tsx":"10","C:\\Users\\Teresa\\Documents\\GitHub\\uonbegin-app\\src\\models\\information.ts":"11","C:\\Users\\Teresa\\Documents\\GitHub\\uonbegin-app\\src\\models\\staff.ts":"12","C:\\Users\\Teresa\\Documents\\GitHub\\uonbegin-app\\src\\components\\editing-components\\ImageUploadBlock.tsx":"13","C:\\Users\\Teresa\\Documents\\GitHub\\uonbegin-app\\src\\components\\webbot\\chat-bot.js":"14","C:\\Users\\Teresa\\Documents\\GitHub\\uonbegin-app\\src\\components\\webbot\\search.js":"15"},{"size":618,"mtime":1636259339915,"results":"16","hashOfConfig":"17"},{"size":440,"mtime":1635115730507,"results":"18","hashOfConfig":"17"},{"size":243,"mtime":1635115730481,"results":"19","hashOfConfig":"17"},{"size":714,"mtime":1636520603885,"results":"20","hashOfConfig":"17"},{"size":2889,"mtime":1636690023491,"results":"21","hashOfConfig":"17"},{"size":228,"mtime":1636259339923,"results":"22","hashOfConfig":"17"},{"size":1510,"mtime":1636618647159,"results":"23","hashOfConfig":"17"},{"size":12255,"mtime":1636687076547,"results":"24","hashOfConfig":"17"},{"size":5731,"mtime":1636687076124,"results":"25","hashOfConfig":"17"},{"size":284,"mtime":1635115730486,"results":"26","hashOfConfig":"17"},{"size":173,"mtime":1636420400768,"results":"27","hashOfConfig":"17"},{"size":367,"mtime":1636687076138,"results":"28","hashOfConfig":"17"},{"size":795,"mtime":1636687076131,"results":"29","hashOfConfig":"17"},{"size":9675,"mtime":1636690023496,"results":"30","hashOfConfig":"17"},{"size":6281,"mtime":1636690023509,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"1tswe5",{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"34"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"34"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Teresa\\Documents\\GitHub\\uonbegin-app\\src\\index.tsx",[],["65","66"],"C:\\Users\\Teresa\\Documents\\GitHub\\uonbegin-app\\src\\reportWebVitals.ts",[],"C:\\Users\\Teresa\\Documents\\GitHub\\uonbegin-app\\src\\App.tsx",[],"C:\\Users\\Teresa\\Documents\\GitHub\\uonbegin-app\\src\\pages\\LandingPage.tsx",[],"C:\\Users\\Teresa\\Documents\\GitHub\\uonbegin-app\\src\\components\\Body.tsx",["67"],"C:\\Users\\Teresa\\Documents\\GitHub\\uonbegin-app\\src\\models\\user.ts",[],"C:\\Users\\Teresa\\Documents\\GitHub\\uonbegin-app\\src\\components\\Login.tsx",[],"C:\\Users\\Teresa\\Documents\\GitHub\\uonbegin-app\\src\\components\\StaffDirectory.tsx",["68","69","70","71","72","73","74"],"import React, { SyntheticEvent, useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport ImageUploadBlock from './editing-components/ImageUploadBlock';\r\nimport { Staff } from '../models/staff';\r\nimport { User } from '../models/user';\r\n\r\nconst StaffDirectory = (props: {user: User}) => {\r\n  /*DB information*/\r\n  const [staffList,setStaffList] = useState([]);\r\n  /*the focus of the page*/\r\n  const [chosenStaff, setChosenStaff] = useState(new Staff());\r\n  /*State booleans*/\r\n  const [isEditing, setIsEditing] = useState(false);\r\n  const [newStaff, setNewStaff] = useState(false);\r\n  const [optionSelected, setOptionSelected] = useState(0);\r\n  /*Pagination methods*/\r\n  const [page, setPage] = useState(1);\r\n  const [lastPage, setLastPage] = useState(0);\r\n  /*Edit/Create variables*/\r\n  const [cName, setCName] = useState('');\r\n  const [cAbout, setCAbout] = useState('');\r\n  const [cContactEmail, setCContactEmail] = useState('');\r\n  const [cContactPhone, setCContactPhone] = useState('');\r\n  const [cContactMobile, setCContactMobile] = useState('');\r\n  const [cContactFax, setCContactFax] = useState('');\r\n  const [cFocusArea, setCFocusArea] = useState('');\r\n  const [cOfficeRoom, setCOfficeRoom] = useState('');\r\n  const [cOfficeBuilding, setCOfficeBuilding] = useState('');\r\n  const [cOfficeLocation, setCOfficeLocation] = useState('');\r\n  const [eName, setEName] = useState('');\r\n  const [eAbout, setEAbout] = useState('');\r\n  const [eContactEmail, setEContactEmail] = useState('');\r\n  const [eContactPhone, setEContactPhone] = useState('');\r\n  const [eContactMobile, setEContactMobile] = useState('');\r\n  const [eContactFax, setEContactFax] = useState('');\r\n  const [eFocusArea, setEFocusArea] = useState('');\r\n  const [eOfficeRoom, setEOfficeRoom] = useState('');\r\n  const [eOfficeBuilding, setEOfficeBuilding] = useState('');\r\n  const [eOfficeLocation, setEOfficeLocation] = useState('');\r\n  /*searchbar*/\r\n  const [search, setSearch] = useState('');\r\n\r\n  useEffect(() => {\r\n    (\r\n      async () => {\r\n        try {\r\n          const {data} = await axios.get(`staff`);\r\n          setStaffList(data.data);\r\n          setLastPage(data.meta.last_page);\r\n        } catch (error) {\r\n          console.log(error);\r\n        }\r\n      }\r\n    )()\r\n  },[page]);\r\n\r\n  const next = () => {\r\n    if (page < lastPage) {\r\n      setPage(page + 1);\r\n    }\r\n  }\r\n\r\n  const prev = () => {\r\n    if (page > 0) {\r\n      setPage(page - 1);\r\n    }\r\n  }\r\n\r\n  const submitCreate = async (e: SyntheticEvent) => {\r\n    e.preventDefault();\r\n    try {\r\n      const {data} = await axios.post('staff',{\r\n        name: cName,\r\n        about: cAbout,\r\n        contact_email: cContactEmail,\r\n        contact_phone: cContactPhone,\r\n        contact_mobile: cContactMobile,\r\n        contact_fax: cContactFax,\r\n        focus_area: cFocusArea,\r\n        office_room: cOfficeRoom,\r\n        office_building: cOfficeBuilding,\r\n        office_location: cOfficeLocation\r\n      });\r\n      setCName('');\r\n      setCAbout('');\r\n      setCContactEmail('');\r\n      setCContactPhone('');\r\n      setCContactMobile('');\r\n      setCContactFax('');\r\n      setCFocusArea('');\r\n      setCOfficeRoom('');\r\n      setCOfficeBuilding('');\r\n      setCOfficeLocation('');\r\n      setNewStaff(false);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n    try {\r\n      //All of the information\r\n      const {data} = await axios.get('staff');\r\n      setStaffList(data.data);\r\n      setLastPage(data.meta.last_page);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  const submitEdit = async (e: SyntheticEvent) => {\r\n    e.preventDefault();\r\n    try {\r\n      const {data} = await axios.put(`staff/${chosenStaff.id}`,{\r\n        name: eName,\r\n        about: eAbout,\r\n        contact_email: eContactEmail,\r\n        contact_phone: eContactPhone,\r\n        contact_mobile: eContactMobile,\r\n        contact_fax: eContactFax,\r\n        focus_area: eFocusArea,\r\n        office_room: eOfficeRoom,\r\n        office_building: eOfficeBuilding,\r\n        office_location: eOfficeLocation\r\n      });\r\n      setIsEditing(false);\r\n\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n    try {\r\n      //All of the information\r\n      const {data} = await axios.get('staff');\r\n      setStaffList(data.data);\r\n      setLastPage(data.meta.last_page);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  const del = async (id: number) => {\r\n    if (window.confirm('Are you sure you want to delete')) {\r\n      axios.delete(`staff/${id}`);\r\n\r\n      setStaffList(staffList.filter((staff: Staff) => staff.id !== id));\r\n    }\r\n  }\r\n\r\n  const commenceSearch = async () => {\r\n    try {\r\n      const {data} = await axios.get(`staff/search?page=${page}&search=${search}`);\r\n      setStaffList(data.data);\r\n      setLastPage(data.meta.last_page);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  const CreateFormButton = () => {\r\n    if (newStaff) {return(<button onClick = {() => setNewStaff(false)}>Close Form</button>);}\r\n    return(<button onClick = {() => setNewStaff(true)}>Create</button>);\r\n  }\r\n\r\n  const setEdit = (staff: Staff) => {\r\n    setEName(staff.name);\r\n    setEAbout(staff.about);\r\n    setEContactEmail(staff.contact_email);\r\n    setEContactPhone(staff.contact_phone);\r\n    setEContactMobile(staff.contact_mobile);\r\n    setEContactFax(staff.contact_fax);\r\n    setEFocusArea(staff.focus_area);\r\n    setEOfficeRoom(staff.office_room);\r\n    setEOfficeBuilding(staff.office_building);\r\n    setEOfficeLocation(staff.office_location);\r\n    setChosenStaff(staff);\r\n\r\n  }\r\n\r\n  return(\r\n    <div id=\"staffDirectory\">\r\n      <div>\r\n        {/*Title section*/}\r\n        <h1>Staff Directory</h1><br />\r\n        <input type = \"text\" placeholder = \"Enter a name here to narrow your search...\" onChange = {(e) => setSearch(e.target.value)} className = \"searchbar\"/><br />\r\n        <button onClick = {commenceSearch}>Search</button>\r\n      </div>\r\n      <div>\r\n        {/*adding new sections to the database*/}\r\n        {props.user.id !== 0 && <CreateFormButton />}\r\n        {newStaff &&\r\n          <div id=\"staffCreate\">\r\n            <form onSubmit = {submitCreate}><br />\r\n            <label>Staff Name</label><br />\r\n            <input type = \"text\" onChange = {e => setCName(e.target.value)} required /><br />\r\n            <label>About section</label><br />\r\n            <textarea onChange = {e => setCAbout(e.target.value)} required></textarea><br />\r\n            {/*Contact information section*/}\r\n            <label>Contact Information</label><br />\r\n            <label>Email</label><br />\r\n            <input type = \"text\" onChange = {e => setCContactEmail(e.target.value)} required /><br />\r\n            <label>Phone</label><br />\r\n            <input type = \"text\" onChange = {e => setCContactPhone(e.target.value)} required /><br />\r\n            <label>Mobile</label><br />\r\n            <input type = \"text\" onChange = {e => setCContactMobile(e.target.value)} required /><br />\r\n            <label>Fax</label><br />\r\n            <input type = \"text\" onChange = {e => setCContactFax(e.target.value)} required /><br />\r\n            <label>Focuse area and Office Location</label><br />\r\n            <label>Focus Area</label><br />\r\n            <input type = \"text\" onChange = {e => setCFocusArea(e.target.value)} required /><br />\r\n            <label>Office Room</label><br />\r\n            <input type = \"text\" onChange = {e => setCOfficeRoom(e.target.value)} required /><br />\r\n            <label>Office Building</label><br />\r\n            <input type = \"text\" onChange = {e => setCOfficeBuilding(e.target.value)} required /><br />\r\n            <label>Office Location</label><br />\r\n            <input type = \"text\" onChange = {e => setCOfficeLocation(e.target.value)} required /><br />\r\n            <button type = \"submit\">Submit</button>\r\n            </form>\r\n          </div>\r\n        }\r\n        {/*Search results section*/}\r\n        {staffList.map((staff: Staff) => {\r\n          if (staff.id === chosenStaff.id) {\r\n            if (isEditing) {\r\n              return(\r\n                <div>\r\n                  <button onClick = {() => setIsEditing(!isEditing)}>View</button><br />\r\n                  <form onSubmit = {submitEdit}><br />\r\n                  <label>Staff Name</label><br />\r\n                  <input type = \"text\" onChange = {e => setEName(e.target.value)} defaultValue = {staff.name} required /><br />\r\n                  <label>About {eName}</label><br />\r\n                  <textarea onChange = {e => setEAbout(e.target.value)} defaultValue = {staff.about} required></textarea><br />\r\n                  {/*Contact information section*/}\r\n                  <label>Contact Information</label><br />\r\n                  <label>Email</label><br />\r\n                  <input type = \"text\" onChange = {e => setEContactEmail(e.target.value)} defaultValue = {staff.contact_email} required /><br />\r\n                  <label>Phone</label><br />\r\n                  <input type = \"text\" onChange = {e => setEContactPhone(e.target.value)} defaultValue = {staff.contact_phone} required /><br />\r\n                  <label>Mobile</label><br />\r\n                  <input type = \"text\" onChange = {e => setEContactMobile(e.target.value)} defaultValue = {staff.contact_mobile} required /><br />\r\n                  <label>Fax</label><br />\r\n                  <input type = \"text\" onChange = {e => setEContactFax(e.target.value)} defaultValue = {staff.contact_fax} required /><br />\r\n                  <label>Focuse area and Office Location</label><br />\r\n                  <label>Focus Area</label><br />\r\n                  <input type = \"text\" onChange = {e => setEFocusArea(e.target.value)} defaultValue = {staff.focus_area} required /><br />\r\n                  <label>Office Room</label><br />\r\n                  <input type = \"text\" onChange = {e => setEOfficeRoom(e.target.value)} defaultValue = {staff.office_room} required /><br />\r\n                  <label>Office Building</label><br />\r\n                  <input type = \"text\" onChange = {e => setEOfficeBuilding(e.target.value)} defaultValue = {staff.office_building} required /><br />\r\n                  <label>Office Location</label><br />\r\n                  <input type = \"text\" onChange = {e => setEOfficeLocation(e.target.value)} defaultValue = {staff.office_location} required /><br />\r\n                  <button type = \"submit\">Submit</button><br />\r\n                  </form>\r\n                  <button onClick = {() => del(chosenStaff.id)}>Delete</button>\r\n                </div>\r\n              );\r\n            }\r\n            return(\r\n              <div id=\"staffDirectoryTile\">\r\n                <h3>{staff.name}</h3>{props.user.id !==0 && <button onClick = {() => setIsEditing(!isEditing)}>Edit</button>}\r\n                <hr />\r\n                <p>{chosenStaff.about}</p>\r\n                <label>Contact Information:</label><br />\r\n                <ul>\r\n                  <li>Contact Email: {staff.contact_email}</li>\r\n                  <li>Contact Phone: {staff.contact_phone}</li>\r\n                  <li>Contact Mobile: {staff.contact_mobile}</li>\r\n                  <li>Contact Fax: {staff.contact_fax}</li>\r\n                </ul>\r\n                <label>Focus Area and Office:</label><br />\r\n                <ul>\r\n                  <li>Focus Area: {staff.focus_area}</li>\r\n                  <li>Office Room: {staff.office_room}</li>\r\n                  <li>Office Building: {staff.office_building}</li>\r\n                  <li>Office Location: {staff.office_location}</li>\r\n                </ul>\r\n                {props.user.id !==0 && <button onClick = {() => del(chosenStaff.id)}>Delete</button>}<br />\r\n              </div>\r\n            );\r\n          } else {\r\n            return(\r\n              <a onClick = {() => setEdit(staff)}>\r\n                <div>\r\n                  <h3>{staff.name}</h3><br />\r\n                  <p>Contact email: {staff.contact_email}</p><br />\r\n                  <p>Office Room: {staff.office_room}</p>\r\n                </div>\r\n              </a>\r\n            );\r\n          }\r\n        })}<br />\r\n        <button onClick = {prev}>Prev</button>\r\n        <button onClick = {next}>Next</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default StaffDirectory;\r\n","C:\\Users\\Teresa\\Documents\\GitHub\\uonbegin-app\\src\\components\\InfoContainer.tsx",["75","76"],"import React, { SyntheticEvent, useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport '../App.css';\r\n/*component imports*/\r\nimport ImageUploadBlock from './editing-components/ImageUploadBlock';\r\n/*models*/\r\nimport { Information } from '../models/information';\r\nimport { User } from '../models/user';\r\n\r\nconst InfoContainer = (props: {title: string, section_id: number, user: User}) => {\r\n  /*DB information*/\r\n  const [information, setInformation] = useState([]);\r\n  /*State variables*/\r\n  const [editInfo, setEditInfo] = useState(new Information());\r\n  const [newInfo, setNewInfo] = useState(false);\r\n  /*Edit/Create variables*/\r\n  const [eId, setEID] = useState(0);\r\n  const [eTitle, setETitle] = useState('');\r\n  const [eBody, setEBody] = useState('');\r\n  const [ePictureURL, setEPictureURL] = useState('');\r\n  const [cTitle, setCTitle] = useState('');\r\n  const [cBody, setCBody] = useState('');\r\n  const [cPictureURL, setCPictureURL] = useState('');\r\n\r\n  useEffect(() => {\r\n    (\r\n      async () => {\r\n        try {\r\n          //All of the information\r\n          const {data} = await axios.get(`info/`);\r\n          setInformation(data);\r\n        } catch (error) {\r\n          console.log(error);\r\n        }\r\n      }\r\n    )()\r\n  },[]);\r\n\r\n  const swapNewInfo = () => {\r\n    //This is used to determine which state the creation form should be in\r\n    setNewInfo(!newInfo);\r\n  }\r\n\r\n  const del = async (id: number) => {\r\n    if (window.confirm('Are you sure you want to delete')) {\r\n      axios.delete(`info/${id}`);\r\n\r\n      setInformation(information.filter((info: Information) => info.id !== id));\r\n    }\r\n  }\r\n\r\n  const submitCreate = async (e: SyntheticEvent) => {\r\n    e.preventDefault();\r\n    try {\r\n      await axios.post('info', {\r\n          title: cTitle,\r\n          body: cBody,\r\n          section_id: props.section_id,\r\n          image_url:  cPictureURL\r\n      })\r\n      setCTitle('');\r\n      setCBody('');\r\n      setCPictureURL('');\r\n      setNewInfo(false);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n    try {\r\n      //All of the information\r\n      const {data} = await axios.get('info');\r\n      setInformation(data);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  const submitEdit = async (e: SyntheticEvent) => {\r\n    e.preventDefault();\r\n    setEID(editInfo.id);\r\n    try {\r\n      await axios.put(`info/${eId}`,{\r\n        title: eTitle,\r\n        body: eBody,\r\n        section_id: props.section_id,\r\n        image_url: ePictureURL\r\n      });\r\n      setEditInfo(new Information());\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n    try {\r\n      //All of the information\r\n      const {data} = await axios.get('info');\r\n      setInformation(data);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  return(\r\n    <div id=\"bannerSettings\">\r\n      <h1>{props.title}</h1>\r\n      {newInfo?\r\n        <button onClick = {swapNewInfo}>Close Form</button> :\r\n        props.user.id !== 0 && <button onClick = {swapNewInfo}>Create New Form</button>\r\n      }\r\n      {newInfo && props.user.id !== 0 &&\r\n        <div id = \"infoCreationForm\">\r\n          <form onSubmit = {submitCreate}>\r\n            <label>Head</label><br />\r\n            <input type = \"text\" onChange = {e => setCTitle(e.target.value)}\r\n            placeholder = \"Header\" required /><br />\r\n            <label>Body</label><br />\r\n            <textarea onChange = {e => setCBody(e.target.value)} required></textarea><br />\r\n            <label>Image</label><br />\r\n            {cPictureURL === ''?\r\n              <p>No picture</p>:\r\n              <div>\r\n                <p>{cPictureURL}</p><button onClick = {() => setCPictureURL('')}>Remove picture</button>\r\n              </div>\r\n            }\r\n            <ImageUploadBlock pictureURL = {cPictureURL} setPictureURL = {setCPictureURL}/>\r\n            <button type = \"submit\">Submit</button>\r\n          </form>\r\n        </div>\r\n       }\r\n      {information.map((info: Information) => {\r\n        if (info.section_id === props.section_id) {\r\n          if (info.id === editInfo.id) {\r\n            return(\r\n              <div id = \"infoCreationForm\">\r\n                <button onClick = {() => setEditInfo(new Information())}>Close Edit</button><br />\r\n                <form onSubmit = {submitEdit}>\r\n                  <label>Head</label><br />\r\n                  <input type = \"text\" name = \"title\" placeholder = \"Header\"\r\n                  onChange = {e => setETitle(e.target.value)} defaultValue = {info.title} required /><br />\r\n                  <label>Body</label><br />\r\n                  <textarea onChange = {e => setEBody(e.target.value)} defaultValue = {info.body} required></textarea><br />\r\n                  {ePictureURL === ''?\r\n                    <p>No picture</p>:\r\n                    <div>\r\n                      <p>{ePictureURL}</p><button onClick = {() => setEPictureURL('')}>Remove picture</button>\r\n                    </div>\r\n                  }\r\n                  <ImageUploadBlock pictureURL = {ePictureURL} setPictureURL = {setEPictureURL} />\r\n                  <button type = \"submit\">Submit</button>\r\n                </form>\r\n              </div>\r\n            );\r\n          }\r\n          return(\r\n            <div id=\"infoBlock\">\r\n              <h2>{info.title}</h2>\r\n              {props.user.id !== 0 && <button onClick = {() => setEditInfo(info)}>Edit</button>}\r\n              <p>{info.body}</p>\r\n              {info.image_url !== undefined && info.image_url !== null && <img src = {info.image_url} />}\r\n              {props.user.id !== 0 && <button onClick = {() => del(info.id)}>Delete</button>}\r\n            </div>\r\n          );\r\n        }\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default InfoContainer;\r\n","C:\\Users\\Teresa\\Documents\\GitHub\\uonbegin-app\\src\\components\\NoMatch.tsx",[],"C:\\Users\\Teresa\\Documents\\GitHub\\uonbegin-app\\src\\models\\information.ts",[],"C:\\Users\\Teresa\\Documents\\GitHub\\uonbegin-app\\src\\models\\staff.ts",[],"C:\\Users\\Teresa\\Documents\\GitHub\\uonbegin-app\\src\\components\\editing-components\\ImageUploadBlock.tsx",[],"C:\\Users\\Teresa\\Documents\\GitHub\\uonbegin-app\\src\\components\\webbot\\chat-bot.js",["77","78","79","80","81","82","83","84","85","86","87","88","89","90","91","92","93","94","95"],"C:\\Users\\Teresa\\Documents\\GitHub\\uonbegin-app\\src\\components\\webbot\\search.js",["96","97"],{"ruleId":"98","replacedBy":"99"},{"ruleId":"100","replacedBy":"101"},{"ruleId":"102","severity":1,"message":"103","line":24,"column":13,"nodeType":"104","endLine":24,"endColumn":56},{"ruleId":"105","severity":1,"message":"106","line":4,"column":8,"nodeType":"107","messageId":"108","endLine":4,"endColumn":26},{"ruleId":"105","severity":1,"message":"109","line":17,"column":10,"nodeType":"107","messageId":"108","endLine":17,"endColumn":24},{"ruleId":"105","severity":1,"message":"110","line":17,"column":26,"nodeType":"107","messageId":"108","endLine":17,"endColumn":43},{"ruleId":"105","severity":1,"message":"111","line":23,"column":18,"nodeType":"107","messageId":"108","endLine":23,"endColumn":27},{"ruleId":"105","severity":1,"message":"112","line":76,"column":14,"nodeType":"107","messageId":"108","endLine":76,"endColumn":18},{"ruleId":"105","severity":1,"message":"112","line":106,"column":14,"nodeType":"107","messageId":"108","endLine":106,"endColumn":18},{"ruleId":"102","severity":1,"message":"103","line":209,"column":9,"nodeType":"104","endLine":209,"endColumn":46},{"ruleId":"113","severity":1,"message":"114","line":127,"column":44,"nodeType":"115","messageId":"116","endLine":127,"endColumn":46},{"ruleId":"102","severity":1,"message":"103","line":156,"column":75,"nodeType":"104","endLine":156,"endColumn":105},{"ruleId":"117","severity":1,"message":"118","line":61,"column":9,"nodeType":"107","messageId":"119","endLine":61,"endColumn":12},{"ruleId":"120","severity":1,"message":"121","line":86,"column":8,"nodeType":"122","messageId":"123","endLine":86,"endColumn":14},{"ruleId":"120","severity":1,"message":"121","line":95,"column":7,"nodeType":"122","messageId":"123","endLine":95,"endColumn":13},{"ruleId":"120","severity":1,"message":"121","line":103,"column":7,"nodeType":"122","messageId":"123","endLine":103,"endColumn":13},{"ruleId":"120","severity":1,"message":"121","line":110,"column":7,"nodeType":"122","messageId":"123","endLine":110,"endColumn":13},{"ruleId":"120","severity":1,"message":"121","line":117,"column":7,"nodeType":"122","messageId":"123","endLine":117,"endColumn":13},{"ruleId":"120","severity":1,"message":"121","line":125,"column":7,"nodeType":"122","messageId":"123","endLine":125,"endColumn":13},{"ruleId":"120","severity":1,"message":"121","line":130,"column":7,"nodeType":"122","messageId":"123","endLine":130,"endColumn":13},{"ruleId":"120","severity":1,"message":"121","line":137,"column":7,"nodeType":"122","messageId":"123","endLine":137,"endColumn":13},{"ruleId":"120","severity":1,"message":"121","line":143,"column":7,"nodeType":"122","messageId":"123","endLine":143,"endColumn":13},{"ruleId":"120","severity":1,"message":"121","line":147,"column":7,"nodeType":"122","messageId":"123","endLine":147,"endColumn":13},{"ruleId":"120","severity":1,"message":"121","line":155,"column":7,"nodeType":"122","messageId":"123","endLine":155,"endColumn":13},{"ruleId":"120","severity":1,"message":"121","line":160,"column":7,"nodeType":"122","messageId":"123","endLine":160,"endColumn":13},{"ruleId":"120","severity":1,"message":"121","line":165,"column":7,"nodeType":"122","messageId":"123","endLine":165,"endColumn":13},{"ruleId":"120","severity":1,"message":"121","line":173,"column":7,"nodeType":"122","messageId":"123","endLine":173,"endColumn":13},{"ruleId":"120","severity":1,"message":"121","line":179,"column":7,"nodeType":"122","messageId":"123","endLine":179,"endColumn":13},{"ruleId":"120","severity":1,"message":"121","line":186,"column":7,"nodeType":"122","messageId":"123","endLine":186,"endColumn":13},{"ruleId":"120","severity":1,"message":"121","line":191,"column":7,"nodeType":"122","messageId":"123","endLine":191,"endColumn":13},{"ruleId":"120","severity":1,"message":"121","line":195,"column":9,"nodeType":"122","messageId":"123","endLine":195,"endColumn":15},{"ruleId":"124","severity":1,"message":"125","line":237,"column":17,"nodeType":"126","messageId":"127","endLine":237,"endColumn":19},{"ruleId":"124","severity":1,"message":"125","line":237,"column":38,"nodeType":"126","messageId":"127","endLine":237,"endColumn":40},"no-native-reassign",["128"],"no-negated-in-lhs",["129"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","@typescript-eslint/no-unused-vars","'StaffSearchResults' is defined but never used.","Identifier","unusedVar","'optionSelected' is assigned a value but never used.","'setOptionSelected' is assigned a value but never used.","'setCAbout' is assigned a value but never used.","'data' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","no-redeclare","'img' is already defined.","redeclared","no-unreachable","Unreachable code.","BreakStatement","unreachableCode","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]